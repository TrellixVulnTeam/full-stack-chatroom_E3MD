{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js\",\n    _s = $RefreshSig$();\n\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport { useState } from 'react'; //import { FacebookCounter } from 'react-reactions';\n\nimport { GithubCounter } from '@charkour/react-reactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatMessage(props) {\n  _s();\n\n  const [showReactions, setShowReactions] = useState(false);\n  const [reactions, setReactions] = useState(props.reactions);\n  let reactionOptions = ['‚ù§Ô∏è', 'üòÇ', 'ü•¥'];\n\n  function onToggleReactions() {\n    setShowReactions(!showReactions);\n  }\n\n  function readEmoji(emoji) {\n    if (emoji[0] != '&') return emoji;\n    let pair = emoji.substring(1).split('&');\n    console.log(pair);\n    return pair;\n  }\n\n  function countEmoji(emoji) {\n    let list = props.reactions.filter(obj => obj.emoji == emoji);\n    console.log(list);\n    if (list) return list.length;else return 0;\n  }\n\n  function reacted(tkn) {\n    let react = props.reactions.find(obj => obj.userToken == tkn);\n    if (react) return react.emoji;else return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message-view \" + (props.isUser ? \"user\" : \" \"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-text-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"username-text\",\n          onClick: props.onClick,\n          children: props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), !props.isUser && !reacted(props.tkn) ? /*#__PURE__*/_jsxDEV(FaGrin, {\n          className: \"show-reaction-button\",\n          onClick: onToggleReactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 55\n        }, this) : null, !props.isUser && reacted(props.tkn) ? /*#__PURE__*/_jsxDEV(FaGrin, {\n          className: \"show-reaction-button highlight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 55\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"reaction-options \" + (showReactions ? \"cshow\" : \"chide\"),\n          children: reactionOptions.map(emoji => {\n            let code = emoji; //if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n            //else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                props.onAddReaction(emoji);\n                onToggleReactions();\n              },\n              className: \"option\",\n              children: code\n            }, emoji, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 31\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"username-text reaction-bar \",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 20\n          }, this), reactionOptions.map(emoji => {\n            let code = \"\"; //if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n            //else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n\n            let count = countEmoji(emoji);\n            if (count > 0) return /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"reaction-tracking\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"reaction-emoji\",\n                children: count > 0 ? count : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"reaction-count\",\n                children: emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 29\n              }, this)]\n            }, emoji, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"chat-message-text \" + (props.isUser ? \"user\" : \" \"),\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatMessage, \"CV1/9cpFId1jR59OGBlqODwosYk=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js"],"names":["FaGrin","FaExclamationCircle","useState","GithubCounter","ChatMessage","props","showReactions","setShowReactions","reactions","setReactions","reactionOptions","onToggleReactions","readEmoji","emoji","pair","substring","split","console","log","countEmoji","list","filter","obj","length","reacted","tkn","react","find","userToken","isUser","onClick","userName","map","code","onAddReaction","count","text"],"mappings":"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","sourcesContent":["\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport{ useState} from 'react';\n//import { FacebookCounter } from 'react-reactions';\nimport { GithubCounter } from '@charkour/react-reactions';\n\n\n\n\n\n\nfunction ChatMessage(props) {\n\n  const [showReactions, setShowReactions] = useState(false)\n  const [reactions, setReactions] = useState(props.reactions)\n  let reactionOptions = ['‚ù§Ô∏è', 'üòÇ', 'ü•¥']\n\n  function onToggleReactions(){\n    setShowReactions(!showReactions)\n  }\n\n  function readEmoji(emoji){\n    if(emoji[0] != '&')return emoji\n    let pair = emoji.substring(1).split('&');\n    console.log(pair)\n    return pair\n\n\n  }\n\n  function countEmoji(emoji){\n\n    let list = props.reactions.filter(obj => obj.emoji == emoji)\n    console.log(list)\n\n    if(list)return list.length\n    else return 0\n  }\n\n\n  function reacted( tkn ){\n\n    let react = props.reactions.find(obj => obj.userToken == tkn)\n    if(react) return react.emoji\n    else return false\n  }\n\n\n  return (\n      \n   \n    <div className={\"chat-message-view \"+ (props.isUser?\"user\":\" \")}>\n\n\n\n            <div className=\"chat-message-text-view\">\n\n              <div className=\"header\">\n                <p class=\"username-text\"  onClick={props.onClick}>{props.userName}</p> \n                {!props.isUser && !reacted(props.tkn)?<FaGrin  className=\"show-reaction-button\" onClick={onToggleReactions} ></FaGrin>:null}\n                {!props.isUser  && reacted(props.tkn)?<FaGrin  className=\"show-reaction-button highlight\"></FaGrin>:null}\n\n\n                <div class={\"reaction-options \"+ (showReactions?\"cshow\":\"chide\")}>\n                    {   reactionOptions.map(\n                          emoji =>{\n                            let code = emoji\n                            //if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n                            //else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n                    \n                            return(\n                              <span key={emoji} onClick={()=>{props.onAddReaction(emoji); onToggleReactions()}} className=\"option\">{\n                                code\n                                }\n                                </span>\n                                \n                            )\n                        \n                          }\n                    )}\n                  </div>\n\n\n\n\n                 <div class={\"username-text reaction-bar \"}>\n                   <span>test</span>\n\n      \n\n                  {  reactionOptions.map((emoji)=>{\n              \n                      let code = \"\"\n                      //if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n                      //else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n                      let count = countEmoji(emoji)\n                      if(count > 0)return(\n                  \n                            <span class={\"reaction-tracking\"} key={emoji}>\n                              <span class={\"reaction-emoji\"}>{count > 0? count: \"\"}</span>\n                            <span class={\"reaction-count\"} >{emoji}</span>\n                          </span>\n                      )\n                    })\n                  }\n              </div>\n  \n      \n              </div>\n                 \n              <p className={\"chat-message-text \"+ (props.isUser?\"user\":\" \")}>\n                  {props.text}\n              </p>\n  \n        </div>\n\n        \n        \n      \n\n\n\n\n\n    </div>\n    );\n}\n\nexport default ChatMessage;\n\n\n"]},"metadata":{},"sourceType":"module"}