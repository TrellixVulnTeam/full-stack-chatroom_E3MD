{"ast":null,"code":"//FIREBASE CONFIG//\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId\n};\nfirebase.initializeApp(firebaseConfig); //DATABASE INIT\n\nconst firestore = firebase.firestore();\nconst chatroomsDB = firestore.collection('chatrooms');\nconst usersDB = firestore.collection('users'); //const messagesRef = firestore.collection('messages');\n//Functional groups\n\nclass FirebaseUtil {\n  constructor() {}\n\n  async userCheckIn(userName) {\n    await firebase.auth().signInAnonymously().then(res => {\n      console.log(\"auth: \", res);\n\n      if (true) {\n        console.log(\"res2\");\n        usersDB.add({\n          name: \"test\"\n        }).then(test => {\n          console.log(\"test\", test);\n        }).catch(error => {\n          console.error(\"Error adding document fb: \", error);\n        });\n        const apiCompletionPromise = usersDB.add({\n          name: \"test2\"\n        });\n        console.log(apiCompletionPromise);\n        return apiCompletionPromise;\n      }\n    }); //await firebase.auth().signInAnonymously();\n    //!localStorage.getItem(\"user-token\")\n    //await firebase.auth().signInAnonymously();\n  }\n\n}\n\nexport { FirebaseUtil };","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/FirebaseUtil/FirebaseUtil.js"],"names":["firebase","firebaseConfig","apiKey","process","env","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","initializeApp","firestore","chatroomsDB","collection","usersDB","FirebaseUtil","constructor","userCheckIn","userName","auth","signInAnonymously","then","res","console","log","add","name","test","catch","error","apiCompletionPromise"],"mappings":"AACA;AACA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AAGA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADH;AAEjBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFP;AAGjBC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,mBAHN;AAIjBC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,uBAJV;AAKjBC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,2BALd;AAMjBC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,eANF;AAOjBC,EAAAA,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPV,CAArB;AAUAjB,QAAQ,CAACkB,aAAT,CAAuBjB,cAAvB,E,CAGA;;AACA,MAAMkB,SAAS,GAAGnB,QAAQ,CAACmB,SAAT,EAAlB;AACA,MAAMC,WAAW,GAAGD,SAAS,CAACE,UAAV,CAAqB,WAArB,CAApB;AACA,MAAMC,OAAO,GAAGH,SAAS,CAACE,UAAV,CAAqB,OAArB,CAAhB,C,CACA;AAGA;;AACA,MAAME,YAAN,CAAoB;AAEhBC,EAAAA,WAAW,GAAE,CACZ;;AAEiB,QAAXC,WAAW,CAACC,QAAD,EAAU;AAE1B,UAAM1B,QAAQ,CAAC2B,IAAT,GAAgBC,iBAAhB,GAAoCC,IAApC,CAAyCC,GAAG,IAAE;AAChDC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,GAArB;;AACA,UAAG,IAAH,EAAQ;AACJC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEAV,QAAAA,OAAO,CAACW,GAAR,CAAY;AACRC,UAAAA,IAAI,EAAE;AADE,SAAZ,EAEGL,IAFH,CAEQM,IAAI,IAAE;AACVJ,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBG,IAApB;AACH,SAJD,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBN,UAAAA,OAAO,CAACM,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACH,SAND;AASA,cAAMC,oBAAoB,GAAGhB,OAAO,CAACW,GAAR,CAAY;AACrCC,UAAAA,IAAI,EAAE;AAD+B,SAAZ,CAA7B;AAGAH,QAAAA,OAAO,CAACC,GAAR,CAAYM,oBAAZ;AAEA,eAAOA,oBAAP;AACH;AAEN,KAtBO,CAAN,CAF0B,CA0BxB;AAEA;AACA;AAGH;;AArCe;;AA4CpB,SACIf,YADJ","sourcesContent":["\n//FIREBASE CONFIG//\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\n\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n};\n  \nfirebase.initializeApp(firebaseConfig)\n\n\n//DATABASE INIT\nconst firestore = firebase.firestore();\nconst chatroomsDB = firestore.collection('chatrooms');\nconst usersDB = firestore.collection('users');\n//const messagesRef = firestore.collection('messages');\n\n\n//Functional groups\nclass FirebaseUtil  {\n\n    constructor(){\n    }\n\n     async userCheckIn(userName){\n\n      await firebase.auth().signInAnonymously().then(res=>{\n          console.log(\"auth: \",res)\n          if(true){\n              console.log(\"res2\")\n  \n              usersDB.add({\n                  name: \"test\"\n              }).then(test=>{\n                  console.log(\"test\", test)\n              }).catch((error) => {\n                  console.error(\"Error adding document fb: \", error);\n              });\n  \n  \n              const apiCompletionPromise = usersDB.add({\n                  name: \"test2\"\n              })\n              console.log(apiCompletionPromise)\n  \n              return apiCompletionPromise\n          }\n        \n    })\n\n        //await firebase.auth().signInAnonymously();\n\n        //!localStorage.getItem(\"user-token\")\n        //await firebase.auth().signInAnonymously();\n\n    \n    }\n\n\n\n}\n\n\nexport {\n    FirebaseUtil\n}\n"]},"metadata":{},"sourceType":"module"}