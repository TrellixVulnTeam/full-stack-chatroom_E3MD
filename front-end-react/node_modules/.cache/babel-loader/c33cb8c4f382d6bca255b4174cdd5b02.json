{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js\",\n    _s = $RefreshSig$();\n\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatMessage(props) {\n  _s();\n\n  const [showReactions, setShowReactions] = useState(false);\n  const [reactions, setReactions] = useState(props.reactions);\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F', '0x2757'];\n\n  function onToggleReactions() {\n    setShowReactions(!showReactions);\n  }\n\n  function readEmoji(emoji) {\n    if (emoji[0] != '&') return emoji;\n    let pair = emoji.substring(1).split('&');\n    console.log(pair);\n    return pair;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message-view \" + (props.isUser ? \"user\" : \" \"),\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-text-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"username-text\",\n        children: props.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"username-text reaction-bar\" + (props.isUser ? \"user\" : \" \"),\n        children: Object.keys(props.reactions).map(emoji => {\n          let code = \"\";\n          if (emoji[0] != '&') code = String.fromCodePoint(emoji);else code = String.fromCodePoint.apply(String, readEmoji(emoji));\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"reaction-tracking\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"reaction-emoji\",\n              children: props.reactions[emoji] > 1 ? props.reactions[emoji] : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"reaction-count\",\n              children: code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this)]\n          }, emoji, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 23\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: props.onClick,\n        className: \"chat-message-text \" + (props.isUser ? \"user\" : \" \"),\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatMessage, \"CV1/9cpFId1jR59OGBlqODwosYk=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js"],"names":["FaGrin","FaExclamationCircle","useState","ChatMessage","props","showReactions","setShowReactions","reactions","setReactions","reactionOptions","onToggleReactions","readEmoji","emoji","pair","substring","split","console","log","isUser","userName","Object","keys","map","code","String","fromCodePoint","apply","onClick","text"],"mappings":";;;AACA,OAAO,mBAAP;AACA,SAASA,MAAT,EAAiBC,mBAAjB,QAA4C,gBAA5C;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAE1B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCJ,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAACE,KAAK,CAACG,SAAP,CAA1C;AACA,MAAIE,eAAe,GAAG,CAAC,SAAD,EAAY,gBAAZ,EAA8B,QAA9B,CAAtB;;AAEA,WAASC,iBAAT,GAA4B;AAC1BJ,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD;;AAED,WAASM,SAAT,CAAmBC,KAAnB,EAAyB;AACvB,QAAGA,KAAK,CAAC,CAAD,CAAL,IAAY,GAAf,EAAmB,OAAOA,KAAP;AACnB,QAAIC,IAAI,GAAGD,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmBC,KAAnB,CAAyB,GAAzB,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,WAAOA,IAAP;AAGD;;AAGD,sBAGE;AAAK,IAAA,SAAS,EAAE,wBAAuBT,KAAK,CAACc,MAAN,GAAa,MAAb,GAAoB,GAA3C,CAAhB;AAAA,4BACQ;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YADR,eAIQ;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAG,QAAA,KAAK,EAAC,eAAT;AAAA,kBAA0Bd,KAAK,CAACe;AAAhC;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAM,QAAA,KAAK,EAAE,gCAAgCf,KAAK,CAACc,MAAN,GAAa,MAAb,GAAoB,GAApD,CAAb;AAAA,kBACEE,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACG,SAAlB,EAA6Be,GAA7B,CAAkCV,KAAD,IAAS;AAE3C,cAAIW,IAAI,GAAG,EAAX;AACA,cAAGX,KAAK,CAAC,CAAD,CAAL,IAAY,GAAf,EAAmBW,IAAI,GAAGC,MAAM,CAACC,aAAP,CAAqBb,KAArB,CAAP,CAAnB,KACKW,IAAI,GAAGC,MAAM,CAACC,aAAP,CAAqBC,KAArB,CAA2BF,MAA3B,EAAmCb,SAAS,CAACC,KAAD,CAA5C,CAAP;AACL,8BACK;AAAM,YAAA,KAAK,EAAE,mBAAb;AAAA,oCACE;AAAM,cAAA,KAAK,EAAE,gBAAb;AAAA,wBAAgCR,KAAK,CAACG,SAAN,CAAgBK,KAAhB,IAAyB,CAAzB,GAA4BR,KAAK,CAACG,SAAN,CAAgBK,KAAhB,CAA5B,GAAoD;AAApF;AAAA;AAAA;AAAA;AAAA,oBADF,eAEA;AAAM,cAAA,KAAK,EAAE,gBAAb;AAAA,wBAAiCW;AAAjC;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA,aAAuCX,KAAvC;AAAA;AAAA;AAAA;AAAA,kBADL;AAMA,SAXC;AADF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAqBJ;AAAG,QAAA,OAAO,EAAER,KAAK,CAACuB,OAAlB;AAA2B,QAAA,SAAS,EAAE,wBAAuBvB,KAAK,CAACc,MAAN,GAAa,MAAb,GAAoB,GAA3C,CAAtC;AAAA,kBACKd,KAAK,CAACwB;AADX;AAAA;AAAA;AAAA;AAAA,cArBI;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAuCD;;GA3DQzB,W;;KAAAA,W;AA6DT,eAAeA,WAAf","sourcesContent":["\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport{ useState} from 'react';\n\n\n\nfunction ChatMessage(props) {\n\n  const [showReactions, setShowReactions] = useState(false)\n  const [reactions, setReactions] = useState(props.reactions)\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F', '0x2757']\n\n  function onToggleReactions(){\n    setShowReactions(!showReactions)\n  }\n\n  function readEmoji(emoji){\n    if(emoji[0] != '&')return emoji\n    let pair = emoji.substring(1).split('&');\n    console.log(pair)\n    return pair\n\n\n  }\n\n\n  return (\n      \n   \n    <div className={\"chat-message-view \"+ (props.isUser?\"user\":\" \")}>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n\n\n            <div className=\"message-text-view\">\n                <p class=\"username-text\">{props.userName}</p> \n\n                <span class={\"username-text reaction-bar\" + (props.isUser?\"user\":\" \")}>\n                { Object.keys(props.reactions).map((emoji)=>{\n                 \n                 let code = \"\"\n                 if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n                 else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n                 return(\n                      <span class={\"reaction-tracking\"} key={emoji}>\n                        <span class={\"reaction-emoji\"}>{props.reactions[emoji] > 1? props.reactions[emoji]: \"\"}</span>\n                      <span class={\"reaction-count\"} >{code}</span>\n                     </span>\n                 )\n                }\n                )}\n                </span>\n         \n       \n          \n        <p onClick={props.onClick} className={\"chat-message-text \"+ (props.isUser?\"user\":\" \")}>\n            {props.text}\n        </p>\n\n        </div>\n\n\n\n\n    </div>\n    );\n}\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}