{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useHistory, BrowserRouter as Router, Route, Switch, Link, withRouter, useLocation } from 'react-router-dom';\nimport ChatRoom from './Chatroom/ChatRoom';\nimport Landing from './Landing/Landing';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { useState } from 'react';\nimport CreateRoom from './Landing/CreateAccount';\nimport UserService from './FirebaseUtil/UserService'; //import * as util from './util'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar util = null;\n/*\nimport {createStore} from 'redux'\nimport TestRedux from './Landing/TestRedux';\n\n\nfunction reducer(state = {}, action){\n  return state;\n\n}\nconst store = createStore(reducer);*/\n\nfunction App(props) {\n  _s();\n\n  let location = useLocation();\n  const [tr, setTr] = useState(\"slide\");\n  let history = useHistory();\n  let data = {\n    user: null,\n    room: null,\n    state: {},\n    persistentToken: localStorage.getItem(\"persistentToken\")\n  };\n  console.log(location.key);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://www.w3schools.com/w3css/4/w3pro.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/chat\",\n        component: () => /*#__PURE__*/_jsxDEV(ChatRoom, {\n          data: data,\n          util: util,\n          history: history\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(Landing, {\n          data: data,\n          util: util,\n          history: history\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OSsBx/CqT8LSiFHcqafzF3f0wco=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/App.js"],"names":["useHistory","BrowserRouter","Router","Route","Switch","Link","withRouter","useLocation","ChatRoom","Landing","TransitionGroup","CSSTransition","useState","CreateRoom","UserService","util","App","props","location","tr","setTr","history","data","user","room","state","persistentToken","localStorage","getItem","console","log","key"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,UAAT,EAAqBC,aAAa,IAAIC,MAAtC,EAA8CC,KAA9C,EAAqDC,MAArD,EAA6DC,IAA7D,EAAmEC,UAAnE,EAA+EC,WAA/E,QAAiG,kBAAjG;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAASC,eAAT,EAA0BC,aAA1B,QAA+C,wBAA/C;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAQC,WAAR,MAA0B,4BAA1B,C,CAKA;;;AAEA,IAAIC,IAAI,GAAG,IAAX;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAElB,MAAIC,QAAQ,GAAGX,WAAW,EAA1B;AACA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcR,QAAQ,CAAC,OAAD,CAA5B;AACA,MAAIS,OAAO,GAAGrB,UAAU,EAAxB;AAEA,MAAIsB,IAAI,GAAE;AACRC,IAAAA,IAAI,EAAE,IADE;AAERC,IAAAA,IAAI,EAAC,IAFG;AAGRC,IAAAA,KAAK,EAAE,EAHC;AAIRC,IAAAA,eAAe,EAAEC,YAAY,CAACC,OAAb,CAAqB,iBAArB;AAJT,GAAV;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACa,GAArB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQY,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,SAAS,EAAE,mBAAI,QAAC,QAAD;AAAW,UAAA,IAAI,EAAET,IAAjB;AAAwB,UAAA,IAAI,EAAEP,IAA9B;AAAoC,UAAA,OAAO,EAAEM;AAA7C;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAC,GAAb;AAAiB,QAAA,SAAS,EAAE,mBAAI,QAAC,OAAD;AAAW,UAAA,IAAI,EAAEC,IAAjB;AAAuB,UAAA,IAAI,EAAEP,IAA7B;AAAmC,UAAA,OAAO,EAAEM;AAA5C;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlCQL,G;UAEQT,W,EAEDP,U;;;KAJPgB,G;AAoCT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useHistory, BrowserRouter as Router, Route, Switch, Link, withRouter, useLocation} from 'react-router-dom';\n\nimport ChatRoom from './Chatroom/ChatRoom'\nimport Landing from './Landing/Landing'\n\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport{ useState} from 'react';\nimport CreateRoom from './Landing/CreateAccount';\nimport  UserService  from './FirebaseUtil/UserService';\n\n\n\n\n//import * as util from './util'\n\nvar util = null;\n\n/*\nimport {createStore} from 'redux'\nimport TestRedux from './Landing/TestRedux';\n\n\nfunction reducer(state = {}, action){\n  return state;\n\n}\nconst store = createStore(reducer);*/\n\n\nfunction App(props) {\n\n  let location = useLocation();\n  const [tr, setTr] = useState(\"slide\");\n  let history = useHistory();\n\n  let data ={\n    user: null,\n    room:null,\n    state: {},\n    persistentToken: localStorage.getItem(\"persistentToken\")\n  }\n  console.log(location.key)\n  \n  return (\n    <div className=\"App\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"></meta>\n        <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3pro.css\"></link>\n        \n       {/* <p class=\"app-title\">\n          chatable.io \n  </p>*/}\n\n                <Switch>\n                  <Route  path='/chat' component={()=><ChatRoom  data={data}  util={util} history={history}  /> }></Route>\n                  <Route  path='/' component={()=><Landing   data={data} util={util} history={history}  />} ></Route>\n              </Switch>\n\n\n        </div>\n\n      \n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}