{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/group-chat-react-project/group-chat-react/src/Landing/JoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button } from 'antd';\nimport styleSheet from '../Styles/StyleSheet';\nimport './JoinRoom.css';\nimport '../Styles/root-themes.css';\nimport CustomInput from './CustomInput';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JoinRoom(props) {\n  _s();\n\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [preRoomModalVisible, setPreRoomModalVisible] = useState(false);\n\n  function setValue(setter, event) {\n    setter(event.target.value);\n    console.log(roomCode);\n  }\n\n  const showPreRoomModal = () => {\n    setIsModalVisible(true);\n  };\n\n  function joinRoom() {\n    let socket = io(\"http://192.168.1.9:3000\", {\n      transport: ['websocket']\n    });\n    socket.on('connect', connection => {\n      //see if room exists\n      socket.emit('find-room', roomCode); //if room does not exist\n\n      socket.on('room-not-found', () => {\n        //TODO: alert\n        return;\n      }); //if room exists\n\n      socket.on('room-found', room => {\n        props.data.user = {\n          userName: userName\n        };\n        props.data.room = room;\n        props.history.push(\"/chat?code=\" + roomCode);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"join-room-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"Join A Room.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Enter room code.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setRoomCode, event),\n        value: roomCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Create a username.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setUserName, event),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"root-theme-button-med join-room-button\",\n        onClick: () => joinRoom(),\n        children: \"join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JoinRoom, \"0wb/R0Lv2v4FwXIWjIoBVSXtqwE=\");\n\n_c = JoinRoom;\nexport default JoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinRoom\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/group-chat-react-project/group-chat-react/src/Landing/JoinRoom.js"],"names":["React","useState","useEffect","Modal","Button","styleSheet","CustomInput","io","JoinRoom","props","roomCode","setRoomCode","userName","setUserName","preRoomModalVisible","setPreRoomModalVisible","setValue","setter","event","target","value","console","log","showPreRoomModal","setIsModalVisible","joinRoom","socket","transport","on","connection","emit","room","data","user","history","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,MAA9B;AAGA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,gBAAP;AACA,OAAO,2BAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,EAAP,MAAe,kBAAf;;;AAKA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,mBAAD,EAAsBC,sBAAtB,IAAgDd,QAAQ,CAAC,KAAD,CAA9D;;AAGA,WAASe,QAAT,CAAkBC,MAAlB,EAA0BC,KAA1B,EAAgC;AAC5BD,IAAAA,MAAM,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACH;;AAED,QAAMa,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAFD;;AAMA,WAASC,QAAT,GAAmB;AAGjB,QAAIC,MAAM,GAAGnB,EAAE,CAAC,yBAAD,EAA4B;AAAEoB,MAAAA,SAAS,EAAE,CAAC,WAAD;AAAb,KAA5B,CAAf;AAEAD,IAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAsBC,UAAD,IAAgB;AAEnC;AACAH,MAAAA,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAyBpB,QAAzB,EAHmC,CAKnC;;AACAgB,MAAAA,MAAM,CAACE,EAAP,CAAU,gBAAV,EAA4B,MAAM;AAChC;AACA;AACD,OAHD,EANmC,CAWnC;;AACAF,MAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAyBG,IAAD,IAAU;AAEhCtB,QAAAA,KAAK,CAACuB,IAAN,CAAWC,IAAX,GAAkB;AAACrB,UAAAA,QAAQ,EAAEA;AAAX,SAAlB;AACAH,QAAAA,KAAK,CAACuB,IAAN,CAAWD,IAAX,GAAkBA,IAAlB;AACAtB,QAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmB,gBAAczB,QAAjC;AAED,OAND;AAQD,KApBD;AAsBD;;AAEH,sBACE;AAAA,2BAGE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,8BAEE;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAMM,QAAC,WAAD;AACI,QAAA,KAAK,EAAC,kBADV;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,QAAQ,EAAGQ,KAAD,IAAWF,QAAQ,CAACL,WAAD,EAAcO,KAAd,CAHjC;AAII,QAAA,KAAK,EAAER;AAJX;AAAA;AAAA;AAAA;AAAA,cANN,eAYM,QAAC,WAAD;AACI,QAAA,KAAK,EAAC,oBADV;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,QAAQ,EAAGQ,KAAD,IAAWF,QAAQ,CAACH,WAAD,EAAcK,KAAd,CAHjC;AAII,QAAA,KAAK,EAAEN;AAJX;AAAA;AAAA;AAAA;AAAA,cAZN,eAqBA;AAAQ,QAAA,KAAK,EAAC,wCAAd;AAAuD,QAAA,OAAO,EAAE,MAAIa,QAAQ,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GApFQjB,Q;;KAAAA,Q;AAsFT,eAAeA,QAAf","sourcesContent":["import React, { useState,  useEffect} from 'react';\nimport { Modal, Button } from 'antd';\n\n\nimport styleSheet from '../Styles/StyleSheet'\nimport './JoinRoom.css';\nimport '../Styles/root-themes.css';\n\nimport CustomInput from './CustomInput'\n\nimport io from 'socket.io-client';\n\n\n\n\nfunction JoinRoom(props) {\n\n    const [roomCode, setRoomCode] = useState(\"\")\n    const [userName, setUserName] = useState(\"\")\n    const [preRoomModalVisible, setPreRoomModalVisible] = useState(false);\n\n\n    function setValue(setter, event){\n        setter(event.target.value)\n        console.log(roomCode)\n    }\n\n    const showPreRoomModal = () => {\n      setIsModalVisible(true);\n    };\n\n\n\n    function joinRoom(){\n\n     \n      let socket = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n      socket.on('connect', (connection) => {\n\n        //see if room exists\n        socket.emit('find-room', roomCode)\n\n        //if room does not exist\n        socket.on('room-not-found', () => {\n          //TODO: alert\n          return\n        })\n\n        //if room exists\n        socket.on('room-found', (room) => {\n\n          props.data.user = {userName: userName};\n          props.data.room = room;\n          props.history.push(\"/chat?code=\"+roomCode)\n          \n        })\n\n      })\n\n    }\n\n  return (\n    <div >\n\n\n      <div class=\"join-room-view\">\n\n        <h1 className=\"\">Join A Room.</h1>\n\n\n\n            <CustomInput\n                title=\"Enter room code.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setRoomCode, event)}\n                value={roomCode}\n            />\n            <CustomInput\n                title=\"Create a username.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setUserName, event)}\n                value={userName}\n            />\n\n\n\n      <button class=\"root-theme-button-med join-room-button\" onClick={()=>joinRoom()}>\n                join\n        </button>\n\n\n\n\n      </div>\n      \n    </div>\n\n  );\n}\n\nexport default JoinRoom;\n"]},"metadata":{},"sourceType":"module"}