{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js\",\n    _s = $RefreshSig$();\n\nimport './ChatMessage.css';\nimport { FaGrin } from \"react-icons/fa\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatMessage(props) {\n  _s();\n\n  const [showReactions, setShowReactions] = useState(false);\n  const [reactions, setReactions] = useState(props.reactions);\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F'];\n\n  function onToggleReactions() {\n    setShowReactions(!showReactions);\n  }\n\n  function readEmoji(emoji) {\n    if (emoji[0] != '&') return emoji;\n    let pair = emoji.substring(1).split('&');\n    console.log(pair);\n    return pair;\n  }\n\n  function numOfReaction(emoji) {\n    /*let new_ = reactions\n    if(new_[emoji])setReactions(new_[emoji]++)\n    else setReactions(new_[emoji] = 1)\n    console.log(new_[emoji])\n    \n    props.message.reactions = new_;\n    setReactions(new_)*/\n    let reaction = props.reactions[emoji];\n    if (reaction) return ++reaction;else return 1;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message-view \" + (props.isUser ? \"user\" : \" \"),\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-text-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"username-text\",\n        children: props.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"username-text reaction-bar\" + (props.isUser ? \"user\" : \" \"),\n        children: Object.keys(props.reactions).map(emoji => /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"reaction-tracking\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"reaction-emoji\",\n            children: props.reactions[emoji] > 1 ? props.reactions[emoji] : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"reaction-count\",\n            children: String.fromCodePoint(emoji)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 23\n          }, this)]\n        }, emoji, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: props.onClick,\n        className: \"chat-message-text \" + (props.isUser ? \"user\" : \" \"),\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-options-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: onToggleReactions,\n        className: \"show show-emojis-btn\",\n        children: /*#__PURE__*/_jsxDEV(FaGrin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"reaction-options \" + (showReactions ? \"show\" : \"hide\"),\n        children: reactionOptions.map(emoji => {\n          readEmoji(emoji);\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => props.onAddReaction(emoji),\n            className: \"reaction-option\",\n            children: String.fromCodePoint(emoji)\n          }, emoji, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatMessage, \"CV1/9cpFId1jR59OGBlqODwosYk=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js"],"names":["FaGrin","useState","ChatMessage","props","showReactions","setShowReactions","reactions","setReactions","reactionOptions","onToggleReactions","readEmoji","emoji","pair","substring","split","console","log","numOfReaction","reaction","isUser","userName","Object","keys","map","String","fromCodePoint","onClick","text","onAddReaction"],"mappings":"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","sourcesContent":["\nimport './ChatMessage.css';\nimport { FaGrin } from \"react-icons/fa\";\nimport{ useState} from 'react';\n\n\n\nfunction ChatMessage(props) {\n\n  const [showReactions, setShowReactions] = useState(false)\n  const [reactions, setReactions] = useState(props.reactions)\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F']\n\n  function onToggleReactions(){\n    setShowReactions(!showReactions)\n  }\n\n  function readEmoji(emoji){\n    if(emoji[0] != '&')return emoji\n    let pair = emoji.substring(1).split('&');\n    console.log(pair)\n    return pair\n\n\n  }\n\n  function numOfReaction(emoji){\n\n      /*let new_ = reactions\n      if(new_[emoji])setReactions(new_[emoji]++)\n      else setReactions(new_[emoji] = 1)\n      console.log(new_[emoji])\n      \n      props.message.reactions = new_;\n      setReactions(new_)*/\n      let reaction = props.reactions[emoji];\n      if(reaction)return ++reaction\n      else return 1\n\n  }\n\n  return (\n      \n   \n    <div className={\"chat-message-view \"+ (props.isUser?\"user\":\" \")}>\n            <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\n\n            <div className=\"message-text-view\">\n                <p class=\"username-text\">{props.userName}</p> \n\n                <span class={\"username-text reaction-bar\" + (props.isUser?\"user\":\" \")}>\n                { Object.keys(props.reactions).map((emoji)=>\n                 \n                  \n                      <span class={\"reaction-tracking\"} key={emoji}>\n                        <span class={\"reaction-emoji\"}>{props.reactions[emoji] > 1? props.reactions[emoji]: \"\"}</span>\n                      <span class={\"reaction-count\"} >{String.fromCodePoint(emoji)}</span>\n                     </span>\n                )}\n                </span>\n         \n               \n       \n       \n          \n        <p onClick={props.onClick} className={\"chat-message-text \"+ (props.isUser?\"user\":\" \")}>\n            {props.text}\n        </p>\n\n        </div>\n\n\n    <div className=\"message-options-view\">\n    <span onClick={onToggleReactions}className=\"show show-emojis-btn\"><FaGrin/></span>\n\n      <div class={\"reaction-options \"+ (showReactions?\"show\":\"hide\")}>\n               {   reactionOptions.map(\n                     emoji =>{\n                      readEmoji(emoji)\n                      return(\n                        <span key={emoji} onClick={()=>props.onAddReaction(emoji)} className=\"reaction-option\">{\n                          String.fromCodePoint(emoji)}\n                          </span>\n                          \n                      )\n                   \n                    }\n               )}\n            </div>\n\n      </div>\n\n    </div>\n    );\n}\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}