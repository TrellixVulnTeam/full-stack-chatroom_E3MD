{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js\",\n    _s = $RefreshSig$();\n\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatMessage(props) {\n  _s();\n\n  const [showReactions, setShowReactions] = useState(false);\n  const [reactions, setReactions] = useState(props.reactions);\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F', '0x2757'];\n\n  function onToggleReactions() {\n    setShowReactions(!showReactions);\n  }\n\n  function readEmoji(emoji) {\n    if (emoji[0] != '&') return emoji;\n    let pair = emoji.substring(1).split('&');\n    console.log(pair);\n    return pair;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message-view \" + (props.isUser ? \"user\" : \" \"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-text-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"username-text\",\n          children: props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"username-text reaction-bar\" + (props.isUser ? \"user\" : \" \"),\n          children: Object.keys(props.reactions).map(emoji => {\n            let code = \"\";\n            if (emoji[0] != '&') code = String.fromCodePoint(emoji);else code = String.fromCodePoint.apply(String, readEmoji(emoji));\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"reaction-tracking\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"reaction-emoji\",\n                children: props.reactions[emoji] > 1 ? props.reactions[emoji] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"reaction-count\",\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)]\n            }, emoji, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: props.onClick,\n        className: \"chat-message-text \" + (props.isUser ? \"user\" : \" \"),\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"reaction-options \" + (showReactions ? \"custom-show\" : \"custom-hide\"),\n        children: reactionOptions.map(emoji => {\n          let code = \"\";\n          if (emoji[0] != '&') code = String.fromCodePoint(emoji);else code = String.fromCodePoint.apply(String, readEmoji(emoji));\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              props.onAddReaction(emoji);\n              onToggleReactions();\n            },\n            className: \"reaction-option\",\n            children: code\n          }, emoji, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-options-view \" + (true ? \"show\" : \"hide\"),\n      children: /*#__PURE__*/_jsxDEV(FaGrin, {\n        className: \"show-reactions-button\",\n        onClick: onToggleReactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatMessage, \"CV1/9cpFId1jR59OGBlqODwosYk=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js"],"names":["FaGrin","FaExclamationCircle","useState","ChatMessage","props","showReactions","setShowReactions","reactions","setReactions","reactionOptions","onToggleReactions","readEmoji","emoji","pair","substring","split","console","log","isUser","userName","Object","keys","map","code","String","fromCodePoint","apply","onClick","text","onAddReaction"],"mappings":"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","sourcesContent":["\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport{ useState} from 'react';\n\n\n\nfunction ChatMessage(props) {\n\n  const [showReactions, setShowReactions] = useState(false)\n  const [reactions, setReactions] = useState(props.reactions)\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F', '0x2757']\n\n  function onToggleReactions(){\n    setShowReactions(!showReactions)\n  }\n\n  function readEmoji(emoji){\n    if(emoji[0] != '&')return emoji\n    let pair = emoji.substring(1).split('&');\n    console.log(pair)\n    return pair\n\n\n  }\n\n\n  return (\n      \n   \n    <div className={\"chat-message-view \"+ (props.isUser?\"user\":\" \")}>\n\n\n\n            <div className=\"chat-message-text-view\">\n\n              <div className=\"header\">\n                <p class=\"username-text\">{props.userName}</p> \n              <div class={\"username-text reaction-bar\" + (props.isUser?\"user\":\" \")}>\n                  { Object.keys(props.reactions).map((emoji)=>{\n              \n                      let code = \"\"\n                      if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n                      else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n                      return(\n                            <span class={\"reaction-tracking\"} key={emoji}>\n                              <span class={\"reaction-emoji\"}>{props.reactions[emoji] > 1? props.reactions[emoji]: \"\"}</span>\n                            <span class={\"reaction-count\"} >{code}</span>\n                          </span>\n                      )\n                    })\n                  }\n              </div>\n\n              </div>\n                 \n              <p onClick={props.onClick} className={\"chat-message-text \"+ (props.isUser?\"user\":\" \")}>\n                  {props.text}\n              </p>\n              <div class={\"reaction-options \"+ (showReactions?\"custom-show\":\"custom-hide\")}>\n               {   reactionOptions.map(\n                     emoji =>{\n                      let code = \"\"\n                      if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n                      else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n                      return(\n                        <span key={emoji} onClick={()=>{props.onAddReaction(emoji); onToggleReactions()}} className=\"reaction-option\">{\n                          code\n                          }\n                          </span>\n                          \n                      )\n                   \n                    }\n               )}\n            </div>\n\n\n        </div>\n        <div className={\"message-options-view \" + (true?\"show\":\"hide\")}>\n          <FaGrin  className=\"show-reactions-button\" onClick={onToggleReactions} ></FaGrin>\n        </div>\n        \n        \n      \n\n\n\n\n\n    </div>\n    );\n}\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}