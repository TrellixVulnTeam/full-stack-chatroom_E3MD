{"ast":null,"code":"//FIREBASE CONFIG//\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId\n};\nfirebase.initializeApp(firebaseConfig); //DATABASE INIT\n\nconst firestore = firebase.firestore();\nconst chatroomsDB = firestore.collection('chatrooms');\nconst usersDB = firestore.collection('users'); //const messagesRef = firestore.collection('messages');\n//Functional groups\n\nclass FirebaseUtil {\n  static async userCheckIn(userName) {\n    //await firebase.auth().signInAnonymously();\n    //!localStorage.getItem(\"user-token\")\n    await firebase.auth().signInAnonymously();\n    console.log(\"res\");\n\n    if (true) {\n      console.log(\"res2\");\n      usersDB.add({\n        name: \"test\"\n      }).then(test => {\n        console.log(\"test\", test);\n      }).catch(error => {\n        console.error(\"Error adding document fb: \", error);\n      });\n      const apiCompletionPromise = usersDB.add({\n        name: \"test2\"\n      });\n      console.log(apiCompletionPromise);\n      return apiCompletionPromise;\n    }\n  }\n\n}\n\nexport { firebase, FirebaseUtil };","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/FirebaseUtil/FirebaseUtil.js"],"names":["firebase","firebaseConfig","apiKey","process","env","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","initializeApp","firestore","chatroomsDB","collection","usersDB","FirebaseUtil","userCheckIn","userName","auth","signInAnonymously","console","log","add","name","then","test","catch","error","apiCompletionPromise"],"mappings":"AACA;AACA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AAGA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADH;AAEjBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFP;AAGjBC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,mBAHN;AAIjBC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,uBAJV;AAKjBC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,2BALd;AAMjBC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,eANF;AAOjBC,EAAAA,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPV,CAArB;AAUAjB,QAAQ,CAACkB,aAAT,CAAuBjB,cAAvB,E,CAEA;;AACA,MAAMkB,SAAS,GAAGnB,QAAQ,CAACmB,SAAT,EAAlB;AACA,MAAMC,WAAW,GAAGD,SAAS,CAACE,UAAV,CAAqB,WAArB,CAApB;AACA,MAAMC,OAAO,GAAGH,SAAS,CAACE,UAAV,CAAqB,OAArB,CAAhB,C,CACA;AAGA;;AACA,MAAME,YAAN,CAAoB;AAEQ,eAAXC,WAAW,CAACC,QAAD,EAAU;AAC9B;AAEA;AACA,UAAMzB,QAAQ,CAAC0B,IAAT,GAAgBC,iBAAhB,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,QAAG,IAAH,EAAQ;AACJD,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEAP,MAAAA,OAAO,CAACQ,GAAR,CAAY;AACRC,QAAAA,IAAI,EAAE;AADE,OAAZ,EAEGC,IAFH,CAEQC,IAAI,IAAE;AACVL,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBI,IAApB;AACH,OAJD,EAIGC,KAJH,CAIUC,KAAD,IAAW;AAChBP,QAAAA,OAAO,CAACO,KAAR,CAAc,4BAAd,EAA4CA,KAA5C;AACH,OAND;AASA,YAAMC,oBAAoB,GAAGd,OAAO,CAACQ,GAAR,CAAY;AACrCC,QAAAA,IAAI,EAAE;AAD+B,OAAZ,CAA7B;AAGAH,MAAAA,OAAO,CAACC,GAAR,CAAYO,oBAAZ;AAEA,aAAOA,oBAAP;AACH;AACJ;;AA3Be;;AAkCpB,SACIpC,QADJ,EAEIuB,YAFJ","sourcesContent":["\n//FIREBASE CONFIG//\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\n\nvar firebaseConfig = {\n    apiKey: process.env.REACT_APP_apiKey,\n    authDomain: process.env.REACT_APP_authDomain,\n    projectId: process.env.REACT_APP_projectId,\n    storageBucket: process.env.REACT_APP_storageBucket,\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\n    appId: process.env.REACT_APP_appId,\n    measurementId: process.env.REACT_APP_measurementId\n};\n  \nfirebase.initializeApp(firebaseConfig)\n\n//DATABASE INIT\nconst firestore = firebase.firestore();\nconst chatroomsDB = firestore.collection('chatrooms');\nconst usersDB = firestore.collection('users');\n//const messagesRef = firestore.collection('messages');\n\n\n//Functional groups\nclass FirebaseUtil  {\n\n    static async userCheckIn(userName){\n        //await firebase.auth().signInAnonymously();\n\n        //!localStorage.getItem(\"user-token\")\n        await firebase.auth().signInAnonymously();\n        console.log(\"res\")\n        if(true){\n            console.log(\"res2\")\n\n            usersDB.add({\n                name: \"test\"\n            }).then(test=>{\n                console.log(\"test\", test)\n            }).catch((error) => {\n                console.error(\"Error adding document fb: \", error);\n            });\n\n\n            const apiCompletionPromise = usersDB.add({\n                name: \"test2\"\n            })\n            console.log(apiCompletionPromise)\n\n            return apiCompletionPromise\n        }\n    }\n\n\n\n}\n\n\nexport {\n    firebase,\n    FirebaseUtil\n}\n"]},"metadata":{},"sourceType":"module"}