{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet'; //FIREBASE CONFIG//\n\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport CustomInput from './CustomInput';\nimport Room from '../Models/RoomModel';\nimport React, { useState, useEffect } from 'react';\nimport { message } from 'antd'; //import {FirebaseUtil} from '../FirebaseUtil/FirebaseUtil';\n\nimport io from 'socket.io-client'; //const FB = new FirebaseUtil();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId\n};\nfirebase.initializeApp(firebaseConfig);\nconst firestore = firebase.firestore();\n\nfunction CreateRoom(props) {\n  _s();\n\n  //info for user sign up\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [socket, setSocket] = useState(\"\");\n  useEffect(() => {\n    console.log({\n      apiKey: process.env.REACT_APP_apiKey,\n      authDomain: process.env.REACT_APP_authDomain,\n      projectId: process.env.REACT_APP_projectId,\n      storageBucket: process.env.REACT_APP_storageBucket,\n      messagingSenderId: process.env.REACT_APP_messagingSenderId,\n      appId: process.env.REACT_APP_appId,\n      measurementId: process.env.REACT_APP_measurementId\n    });\n    firestore.collection('users').add({\n      name: \"test2\"\n    }).then(res => {\n      console.log(\"RES: \", res);\n    }); //open up connection to set up room\n\n    let socket_ = io(\"http://192.168.1.9:3000\", {\n      transport: ['websocket']\n    }); //save connection\n\n    setSocket(socket_); //once connected....\n\n    socket_.on('connect', connection => {\n      console.log(\"connected.\"); //get a code for the room\n\n      socket_.emit('generate-code');\n      socket_.on('generated-code', code => {\n        setRoomCode(code);\n      });\n    });\n  }, []);\n\n  function setValue(setter, event) {\n    setter(event.target.value);\n  }\n\n  function onCreateRoom() {\n    //validate user form\n    if (!userName) {\n      message.error(\"please enter a user name.\");\n      return;\n    } //Create room object //create user object\n\n\n    let room = new Room(roomCode, roomName, userName);\n    let user = {\n      userName: userName\n    }; //update props// TODO: change to redux\n\n    props.data.user = user;\n    props.data.room = room; //change pages\n\n    props.history.push(\"/chat?=\" + roomCode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-root create-room-root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-room-view\",\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Name Your Room\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setRoomName, event),\n        value: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Create a username.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setUserName, event),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption\",\n          children: \"Share this code to your room.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption-subtitle\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption\",\n          children: \"Share this url to your room.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption-subtitle\",\n          children: \"websitename.com/chat?=\" + roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCreateRoom,\n        style: styleSheet.smallbutton,\n        children: \" create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRoom, \"LOXd2yx8WUlCBbQV2980r7QNTS0=\");\n\n_c = CreateRoom;\nexport default CreateRoom;\n/*\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js"],"names":["styleSheet","firebase","CustomInput","Room","React","useState","useEffect","message","io","firebaseConfig","apiKey","process","env","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","measurementId","REACT_APP_measurementId","initializeApp","firestore","CreateRoom","props","roomName","setRoomName","userName","setUserName","password","setPassword","roomCode","setRoomCode","socket","setSocket","console","log","collection","add","name","then","res","socket_","transport","on","connection","emit","code","setValue","setter","event","target","value","onCreateRoom","error","room","user","data","history","push","smallbutton"],"mappings":"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","sourcesContent":["import './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet'\n\n//FIREBASE CONFIG//\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\n\n\nimport CustomInput from './CustomInput'\nimport Room from '../Models/RoomModel'\nimport React, { useState,  useEffect} from 'react';\nimport { message} from 'antd';\n//import {FirebaseUtil} from '../FirebaseUtil/FirebaseUtil';\nimport io from 'socket.io-client';\n\n\n//const FB = new FirebaseUtil();\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId,\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n  measurementId: process.env.REACT_APP_measurementId\n};\n\nfirebase.initializeApp(firebaseConfig)\n\nconst firestore = firebase.firestore();\n\n\n\nfunction CreateRoom(props) {\n\n    //info for user sign up\n    const [roomName, setRoomName] = useState(\"\")\n    const [userName, setUserName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [roomCode, setRoomCode] = useState(\"\")\n    const [socket, setSocket] = useState(\"\")\n\n\n\n    \n    useEffect( () => {\n\n      console.log({\n        apiKey: process.env.REACT_APP_apiKey,\n        authDomain: process.env.REACT_APP_authDomain,\n        projectId: process.env.REACT_APP_projectId,\n        storageBucket: process.env.REACT_APP_storageBucket,\n        messagingSenderId: process.env.REACT_APP_messagingSenderId,\n        appId: process.env.REACT_APP_appId,\n        measurementId: process.env.REACT_APP_measurementId\n      })\n\n      firestore.collection('users').add({\n        name: \"test2\"\n    }).then(res=>{\n      console.log(\"RES: \", res)\n    })\n    \n\n      //open up connection to set up room\n      let socket_ = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n      //save connection\n      setSocket(socket_)\n\n      //once connected....\n      socket_.on('connect', (connection) => {\n        console.log(\"connected.\")\n        //get a code for the room\n        socket_.emit('generate-code')\n        socket_.on('generated-code', (code) => {\n          setRoomCode(code)\n        })\n\n      })\n\n    }, []);\n\n    function setValue(setter, event){\n        setter(event.target.value)\n\n    }\n\n    function onCreateRoom(){\n\n      //validate user form\n      if(!userName){\n        message.error(\"please enter a user name.\");\n        return\n      }\n\n      //Create room object //create user object\n      let room = new Room(roomCode, roomName, userName)\n      let user = {userName: userName}\n      //update props// TODO: change to redux\n      props.data.user = user\n      props.data.room = room;\n      //change pages\n      props.history.push(\"/chat?=\"+roomCode)\n\n\n    }\n  return (\n    <div className=\"page-root create-room-root\">\n\n\n      <div className=\"create-room-view\">\n\n            <CustomInput\n                title=\"Name Your Room\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setRoomName, event)}\n                value={roomName}\n            />\n\n            <CustomInput\n                title=\"Create a username.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setUserName, event)}\n                value={userName}\n            />\n  \n            <div className=\"share-view\">\n              <p className=\"caption\">Share this code to your room.</p>\n              <p className=\"caption-subtitle\">{roomCode}</p><br/>\n              <p className=\"caption\">Share this url to your room.</p>\n              <p className=\"caption-subtitle\">{\"websitename.com/chat?=\"+roomCode}</p>\n            </div>\n\n            <button \n              onClick={onCreateRoom} \n              style={styleSheet.smallbutton}\n            > create\n            </button>\n\n      </div>\n      \n    </div>\n\n  );\n}\n\nexport default CreateRoom;\n\n\n/*\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */"]},"metadata":{},"sourceType":"module"}