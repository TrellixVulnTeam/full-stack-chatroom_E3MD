{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport './chatroom.css';\nimport Room from './RoomModel';\nimport Message from './MessageModel';\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport ChatMessage from './ChatMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(props) {\n  _s();\n\n  const [room, setRoom] = useState(true);\n  const [user, setUser] = useState(true);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [roomSocket, setRoomSocket] = useState(null); //const socket = props.socket;\n\n  useEffect(() => {\n    let room_ = new Room(\"25\", \"love isalnd ❤️\", \"kit\"); //props.data.room\n\n    let user_ = {\n      userName: \"kit\"\n    }; //props.data.user_\n\n    let isAdmin_ = room_.admin == user.userName ? true : false;\n    setRoom(room_);\n    setUser(user_);\n    setIsAdmin(isAdmin_); //TODO: enter by url\n    //let roomCode_ = query_params(window.location.href)\n\n    const socket = io(\"http://192.168.1.9:3000\", {\n      transport: ['websocket']\n    });\n    /*\n    //url info\n    //set states\n    if(isAdmin_)setIsAdmin(true)\n    setRoomCode(roomCode_)\n    */\n    //socket functions\n\n    socket.on('connect', connection => {\n      console.log(isAdmin_);\n      setRoomSocket(socket);\n      if (isAdmin_) socket.emit('create-room', room_.roomCode);else socket.emit('join-room', room.roomCode);\n      socket.on('backlog-messages', messages_ => {\n        setMessages(messages_);\n      });\n      socket.on('broadcasted-message', message => {\n        console.log(\"received: \", message);\n        setMessages([...messages, message]);\n      });\n    });\n  }, []);\n\n  function setValue(setter, event) {\n    setter(event.target.value);\n  }\n\n  function sendMessage() {\n    roomSocket.emit(\"broadcast-message\", room.roomCode, newMessage);\n    setNewMessage(\"\");\n  }\n\n  function query_params(queryString) {\n    var queryParts = queryString.split('?');\n    var pairsString;\n    var query = {};\n    console.log(queryParts);\n    if (queryParts.length > 1) pairsString = queryParts[1].split('=');\n    console.log(pairsString);\n    let i = 0;\n\n    while (i < pairsString.length) {\n      query[pairsString[i]] = pairsString[i + 1];\n      i += 2;\n    }\n\n    console.log(query);\n    return query;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"root\",\n    children: room ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chatroom-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"title-view\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"title-text\",\n          children: room.roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chatroom-messages-view\",\n        children: messages ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n            text: msg.text,\n            userName: \"\",\n            isUser: false\n          }, msg.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"typed-message-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: event => setValue(setNewMessage, event),\n          class: \"typed-message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"material-icons send-message-btn\",\n          onClick: sendMessage,\n          children: \"\\uE163\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"xy31CTunRQzOHIuu/Xks38s7fSo=\");\n\n_c = Chat;\nexport default Chat;\n/*\n\n\n      //let roomCode_ = localStorage.getItem(\"room-code\")\n        let isAdmin_ = localStorage.getItem('create-room')\n        let roomName_ = localStorage.getItem(\"room-name\")\n        let userName_ = localStorage.getItem(\"user-name\")\n        let room_ = {\n            name:roomName_,\n            admin: userName_,\n            password:\"xxx\",\n            code: roomCode_\n        }\n\n\n                <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={true}\n            ></ChatMessage>\n            <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={false}\n            ></ChatMessage>\n                    <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={true}\n            ></ChatMessage>\n            <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={false}\n            ></ChatMessage>\n                                <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={true}\n            ></ChatMessage>\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js"],"names":["Room","Message","React","useState","useEffect","io","ChatMessage","Chat","props","room","setRoom","user","setUser","newMessage","setNewMessage","messages","setMessages","isAdmin","setIsAdmin","roomSocket","setRoomSocket","room_","user_","userName","isAdmin_","admin","socket","transport","on","connection","console","log","emit","roomCode","messages_","message","setValue","setter","event","target","value","sendMessage","query_params","queryString","queryParts","split","pairsString","query","length","i","roomName","map","msg","text","id"],"mappings":"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","sourcesContent":["import './chatroom.css';\nimport Room from './RoomModel'\nimport Message from './MessageModel'\n\nimport React, { useState,  useEffect} from 'react';\nimport io from 'socket.io-client';\n\n\nimport ChatMessage from './ChatMessage';\n\n\n\nfunction Chat(props) {\n\n    const [room, setRoom] = useState(true)\n    const [user, setUser] = useState(true)\n    const [newMessage, setNewMessage] = useState(\"\")\n    const [messages, setMessages] = useState([])\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const [roomSocket, setRoomSocket] = useState(null)\n    //const socket = props.socket;\n    \n\n    useEffect(() => {\n\n        let room_ = new Room(\"25\", \"love isalnd ❤️\", \"kit\")//props.data.room\n        let user_ = {userName:\"kit\"} //props.data.user_\n        let isAdmin_ = room_.admin == user.userName? true: false;\n\n        setRoom(room_)\n        setUser(user_)\n        setIsAdmin(isAdmin_)\n\n        //TODO: enter by url\n        //let roomCode_ = query_params(window.location.href)\n\n        const socket = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n        /*\n        //url info\n        //set states\n        if(isAdmin_)setIsAdmin(true)\n        setRoomCode(roomCode_)\n        */\n\n\n        //socket functions\n        socket.on('connect', (connection) => {\n\n            console.log(isAdmin_)\n            setRoomSocket(socket)\n            \n            if(isAdmin_)socket.emit('create-room', room_.roomCode)\n            else socket.emit('join-room', room.roomCode)\n\n\n\n            socket.on('backlog-messages', (messages_) => {\n                setMessages(messages_)\n            });\n\n            socket.on('broadcasted-message', (message) => {\n                console.log(\"received: \",message)\n                setMessages([...messages, message])\n            });\n\n      });\n\n        \n    }, []);\n\n\n    function setValue(setter, event){\n        setter(event.target.value)\n\n    }\n\n    function sendMessage(){\n        roomSocket.emit(\"broadcast-message\", room.roomCode, newMessage )\n        setNewMessage(\"\")\n    }\n    \n\n\n\n    function query_params(queryString){\n        \n        var queryParts = queryString.split('?')\n        var pairsString;\n        var query = {}\n\n        console.log(queryParts)\n        if(queryParts.length > 1) pairsString = queryParts[1].split('=');\n        console.log(pairsString)\n\n        let i=0;\n        while(i <pairsString.length){\n            query[pairsString[i]] = pairsString[i+1]\n            i+=2;\n        }\n        console.log(query)\n\n        return query\n    }\n\n    \n\n\n\n\n  \n\n  return (\n    <div class=\"root\">\n    {room?\n\n        <div class=\"chatroom-view\">\n        <div class=\"title-view\">\n            <p class=\"title-text\">{room.roomName}</p>\n        </div>\n        <div class=\"chatroom-messages-view\">\n    \n            {messages?\n            <div>\n                {messages.map(msg=> <ChatMessage key={msg.id} text={msg.text} userName={\"\"} isUser={false}/>)}\n                </div>\n                :null\n            }\n\n            </div>\n            <div class=\"typed-message-view\">\n            \n                <input  type=\"text\" value={newMessage} onChange={(event)=> setValue(setNewMessage, event) }class=\"typed-message-input\"></input>\n                <i class=\"material-icons send-message-btn\" onClick={sendMessage}>&#xe163;</i>\n\n\n            </div>\n\n        </div>\n        :null\n    }\n    </div>\n  );\n}\n\nexport default Chat;\n\n\n\n/*\n\n\n      //let roomCode_ = localStorage.getItem(\"room-code\")\n        let isAdmin_ = localStorage.getItem('create-room')\n        let roomName_ = localStorage.getItem(\"room-name\")\n        let userName_ = localStorage.getItem(\"user-name\")\n        let room_ = {\n            name:roomName_,\n            admin: userName_,\n            password:\"xxx\",\n            code: roomCode_\n        }\n\n\n                <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={true}\n            ></ChatMessage>\n            <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={false}\n            ></ChatMessage>\n                    <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={true}\n            ></ChatMessage>\n            <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={false}\n            ></ChatMessage>\n                                <ChatMessage\n                text={\"Hi, Sweet! So, what do you wanna do today?Sweet! \"}\n                userName=\"name\"\n                isUser={true}\n            ></ChatMessage>\n*/"]},"metadata":{},"sourceType":"module"}