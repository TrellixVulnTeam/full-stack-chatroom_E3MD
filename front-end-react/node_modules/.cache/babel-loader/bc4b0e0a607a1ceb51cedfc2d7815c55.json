{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet'; //FIREBASE CONFIG//\n\nimport firebase from 'firebase';\nimport 'firebase/firestore';\nimport CustomInput from './CustomInput';\nimport Room from '../Models/RoomModel';\nimport React, { useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport { FirebaseUtil } from '../FirebaseUtil/FirebaseUtil';\nimport io from 'socket.io-client'; //const FB = new FirebaseUtil();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateRoom(props) {\n  _s();\n\n  //info for user sign up\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [socket, setSocket] = useState(\"\");\n  useEffect(async () => {\n    await FirebaseUtil.getUserToken();\n  }, []);\n\n  function setValue(setter, event) {\n    setter(event.target.value);\n  }\n\n  function onCreateRoom() {\n    //validate user form\n    if (!userName) {\n      message.error(\"please enter a user name.\");\n      return;\n    } //Create room object //create user object\n\n\n    let room = new Room(roomCode, roomName, userName);\n    let user = {\n      userName: userName\n    }; //update props// TODO: change to redux\n\n    FirebaseUtil.createRoom(userName, localStorage.getItem(\"user-token\"), roomName).then(doc => {\n      props.data.user = user;\n      props.data.room = room; //change pages\n\n      props.history.push(\"/chat?=\" + doc.id);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-root create-room-root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-room-view\",\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Name Your Room\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setRoomName, event),\n        value: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Create a username.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setUserName, event),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCreateRoom,\n        style: styleSheet.smallbutton,\n        children: \" create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRoom, \"LOXd2yx8WUlCBbQV2980r7QNTS0=\");\n\n_c = CreateRoom;\nexport default CreateRoom;\n/*\n\n  //open up connection to set up room\n      let socket_ = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n      //save connection\n      setSocket(socket_)\n\n      //once connected....\n      socket_.on('connect', (connection) => {\n        console.log(\"connected.\")\n        //get a code for the room\n        socket_.emit('generate-code')\n        socket_.on('generated-code', (code) => {\n          setRoomCode(code)\n        })\n\n      })\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js"],"names":["styleSheet","firebase","CustomInput","Room","React","useState","useEffect","message","FirebaseUtil","io","CreateRoom","props","roomName","setRoomName","userName","setUserName","password","setPassword","roomCode","setRoomCode","socket","setSocket","getUserToken","setValue","setter","event","target","value","onCreateRoom","error","room","user","createRoom","localStorage","getItem","then","doc","data","history","push","id","smallbutton"],"mappings":";;;AAAA,OAAO,kBAAP;AACA,OAAO,2BAAP;AACA,OAAOA,UAAP,MAAuB,sBAAvB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AAIA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAuB,MAAvB;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAGA;;;;AAKA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEvB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AAKAC,EAAAA,SAAS,CAAE,YAAY;AAEnB,UAAME,YAAY,CAACc,YAAb,EAAN;AAEH,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASC,QAAT,CAAkBC,MAAlB,EAA0BC,KAA1B,EAAgC;AAC5BD,IAAAA,MAAM,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AAEH;;AAED,WAASC,YAAT,GAAuB;AAErB;AACA,QAAG,CAACd,QAAJ,EAAa;AACXP,MAAAA,OAAO,CAACsB,KAAR,CAAc,2BAAd;AACA;AACD,KANoB,CASrB;;;AACA,QAAIC,IAAI,GAAG,IAAI3B,IAAJ,CAASe,QAAT,EAAmBN,QAAnB,EAA6BE,QAA7B,CAAX;AACA,QAAIiB,IAAI,GAAG;AAACjB,MAAAA,QAAQ,EAAEA;AAAX,KAAX,CAXqB,CAYrB;;AACAN,IAAAA,YAAY,CAACwB,UAAb,CAAwBlB,QAAxB,EAAkCmB,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAlC,EAAsEtB,QAAtE,EAAgFuB,IAAhF,CAAqFC,GAAG,IAAE;AAExFzB,MAAAA,KAAK,CAAC0B,IAAN,CAAWN,IAAX,GAAkBA,IAAlB;AACApB,MAAAA,KAAK,CAAC0B,IAAN,CAAWP,IAAX,GAAkBA,IAAlB,CAHwF,CAIxF;;AACAnB,MAAAA,KAAK,CAAC2B,OAAN,CAAcC,IAAd,CAAmB,YAAUH,GAAG,CAACI,EAAjC;AAED,KAPD;AAaD;;AACH,sBACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,2BAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BAEM,QAAC,WAAD;AACI,QAAA,KAAK,EAAC,gBADV;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,QAAQ,EAAGf,KAAD,IAAWF,QAAQ,CAACV,WAAD,EAAcY,KAAd,CAHjC;AAII,QAAA,KAAK,EAAEb;AAJX;AAAA;AAAA;AAAA;AAAA,cAFN,eASM,QAAC,WAAD;AACI,QAAA,KAAK,EAAC,oBADV;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,QAAQ,EAAGa,KAAD,IAAWF,QAAQ,CAACR,WAAD,EAAcU,KAAd,CAHjC;AAII,QAAA,KAAK,EAAEX;AAJX;AAAA;AAAA;AAAA;AAAA,cATN,eAyBM;AACE,QAAA,OAAO,EAAEc,YADX;AAEE,QAAA,KAAK,EAAE5B,UAAU,CAACyC,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD;;GA1FQ/B,U;;KAAAA,U;AA4FT,eAAeA,UAAf;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet'\n\n//FIREBASE CONFIG//\nimport firebase from 'firebase';\nimport 'firebase/firestore';\n\n\n\nimport CustomInput from './CustomInput'\nimport Room from '../Models/RoomModel'\nimport React, { useState,  useEffect} from 'react';\nimport { message} from 'antd';\nimport {FirebaseUtil} from '../FirebaseUtil/FirebaseUtil';\nimport io from 'socket.io-client';\n\n\n//const FB = new FirebaseUtil();\n\n\n\n\nfunction CreateRoom(props) {\n\n    //info for user sign up\n    const [roomName, setRoomName] = useState(\"\")\n    const [userName, setUserName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [roomCode, setRoomCode] = useState(\"\")\n    const [socket, setSocket] = useState(\"\")\n\n\n\n    \n    useEffect( async () => {\n\n        await FirebaseUtil.getUserToken()\n\n    }, []);\n\n    function setValue(setter, event){\n        setter(event.target.value)\n\n    }\n\n    function onCreateRoom(){\n\n      //validate user form\n      if(!userName){\n        message.error(\"please enter a user name.\");\n        return\n      }\n\n      \n      //Create room object //create user object\n      let room = new Room(roomCode, roomName, userName)\n      let user = {userName: userName}\n      //update props// TODO: change to redux\n      FirebaseUtil.createRoom(userName, localStorage.getItem(\"user-token\"), roomName).then(doc=>{\n\n        props.data.user = user\n        props.data.room = room;\n        //change pages\n        props.history.push(\"/chat?=\"+doc.id)\n\n      })\n\n\n      \n\n\n    }\n  return (\n    <div className=\"page-root create-room-root\">\n\n\n      <div className=\"create-room-view\">\n\n            <CustomInput\n                title=\"Name Your Room\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setRoomName, event)}\n                value={roomName}\n            />\n\n            <CustomInput\n                title=\"Create a username.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setUserName, event)}\n                value={userName}\n            />\n  \n            {/*\n            <div className=\"share-view\">\n              <p className=\"caption\">Share this code to your room.</p>\n              <p className=\"caption-subtitle\">{roomCode}</p><br/>\n              <p className=\"caption\">Share this url to your room.</p>\n              <p className=\"caption-subtitle\">{\"websitename.com/chat?=\"+roomCode}</p>\n            </div>\n            */}\n\n            <button \n              onClick={onCreateRoom} \n              style={styleSheet.smallbutton}\n            > create\n            </button>\n\n      </div>\n      \n    </div>\n\n  );\n}\n\nexport default CreateRoom;\n\n\n/*\n\n  //open up connection to set up room\n      let socket_ = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n      //save connection\n      setSocket(socket_)\n\n      //once connected....\n      socket_.on('connect', (connection) => {\n        console.log(\"connected.\")\n        //get a code for the room\n        socket_.emit('generate-code')\n        socket_.on('generated-code', (code) => {\n          setRoomCode(code)\n        })\n\n      })\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */"]},"metadata":{},"sourceType":"module"}