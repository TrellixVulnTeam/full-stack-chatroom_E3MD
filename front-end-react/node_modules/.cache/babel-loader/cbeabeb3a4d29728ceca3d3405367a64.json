{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js\";\nimport './Chatroom.css';\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport io from 'socket.io-client';\nimport autosize from \"autosize\";\nimport ChatMessage from './ChatMessage';\nimport SocketManager from './Socket';\nimport Message from '../Models/MessageModel';\nimport { FaTelegramPlane } from \"react-icons/fa\";\nimport { Modal, Button } from 'antd';\nimport { UserService } from '../FirebaseUtil/UserService';\nimport { FirebaseUtil } from '../FirebaseUtil/FirebaseUtil'; // \"bnh5yzdirjinqaorq0ox1tf383nb3xr\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: null,\n      user: null,\n      isAdmin: \"\",\n      newMessage: \"\",\n      messages: [],\n      status: \"\",\n      messageOptionsIsVisible: false,\n      render: false\n    }; ////bind functions\n\n    this.textarea = /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }, this);\n    this.removeMessage = this.removeMessage.bind(this);\n    this.onAddReaction = this.onAddReaction.bind(this);\n    this.showMessageOptions = this.showMessageOptions.bind(this); //other variables\n\n    this.MaxMessageLength = 140;\n    this.socket = null; //query parameters\n\n    let queryParams = {};\n\n    try {\n      let searchString = this.props.history.location.search.substring(1).split('&');\n      let pair = [];\n\n      for (var i = 0; i < searchString.length; i++) {\n        pair = searchString[i].split('=');\n        queryParams[pair[0]] = pair[1];\n      }\n\n      if (!queryParams.room) return this.setState({\n        status: \"404\"\n      });\n    } catch (err) {\n      console.log(\"query param err: \", err);\n      this.setState({\n        status: \"404\"\n      });\n      return;\n    }\n    /*FirebaseUtil.findRoom(roomCode).then(doc =>{\n        console.log(doc.data())\n    })*/\n\n\n    (async () => {\n      /////find room\n      let room;\n      if (this.props.location.state) room = this.props.location.state.room;else {\n        room = await FirebaseUtil.findRoomById(queryParams.room);\n        console.log(room);\n      }\n\n      if (!room) {\n        this.setState({\n          status: \"404\"\n        });\n        this.setState({\n          render: true\n        });\n        return;\n      } //set state\n\n\n      this.setState = {\n        room: room,\n        user: this.props.data.user,\n        isAdmin: room.adminID == UserService.token(),\n        newMessage: \"\",\n        messages: [],\n        status: \"200\",\n        messageOptionsIsVisible: false,\n        render: true\n      };\n      console.log(this.state.room);\n    })(); //})()\n\n  }\n\n  componentDidMount() {\n    if (this.state.status == \"404\") {\n      //this.props.history.push(\"/\")\n      //return\n      return;\n    } else if (this.state.render) {\n      //if(!this.state.room)this.props.history.push(\"/\")\n      if (true) {\n        this.connectSocket();\n        this.socketEvents();\n      } //http://localhost:3000/chat?=Yu9uIlEncb8flTfFxv14.focus();\n\n\n      autosize(this.textarea);\n    }\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    console.log(previousProps, previousState);\n\n    if (this.state.render) {\n      //if(!this.state.room)this.props.history.push(\"/\")\n      if (true) {\n        this.connectSocket();\n        this.socketEvents();\n      } //http://localhost:3000/chat?=Yu9uIlEncb8flTfFxv14.focus();\n\n\n      autosize(this.textarea);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.myProps !== this.props.myProp) {// this.props.myProp has a different value\n      // ...\n    }\n  }\n\n  connectSocket() {\n    this.socket = io(\"http://192.168.1.9:1234\", {\n      transport: ['websocket']\n    });\n  }\n\n  set(field, value) {\n    this.setState({\n      [field]: value\n    });\n  }\n\n  socketEvents() {\n    //socket functions\n    this.socket.on('connect', connection => {\n      if (this.state.isAdmin) {\n        SocketManager.createRoom(this);\n      } else {\n        this.socket.emit('join-room', this.state.room.roomCode, this.props.data.persistentToken);\n      }\n\n      console.log(\"connected.\");\n      this.socket.on('generated-user-token', tkn => {\n        this.props.data.persistentToken = tkn;\n        localStorage.setItem(\"persistentToken\", tkn);\n        console.log(\"new token generated: \", tkn);\n      });\n      this.socket.on('backlog-messages', messages_ => {\n        this.set(\"messages\", messages_);\n        this.set(\"status\", \"loaded\");\n        console.log(\"backlog: \", messages_);\n      });\n      this.socket.on('broadcasted-message', message => {\n        this.set(\"messages\", [...this.state.messages, message]);\n      });\n      this.socket.on('room-ended', () => {\n        console.log(\"room ended. \");\n        this.socket.close();\n        this.detachFromRoom();\n      });\n      this.socket.on('removed-message', messages_ => {\n        this.set(\"messages\", messages_);\n        console.log(\"messages updated: \", messages_);\n      });\n      this.socket.on('update-message', messages_ => {\n        this.set(\"messages\", messages_);\n        console.log(\"messages updated: \", messages_);\n      });\n      this.socket.on('find-and-ban-user', token => {\n        console.log(\"user has been banned.\");\n        console.log(token === this.props.data.persistentToken);\n        console.log(token, this.props.data.persistentToken);\n\n        if (token === this.props.data.persistentToken) {\n          this.detachFromRoom();\n          this.set(\"status\", \"banned\");\n        }\n      });\n    });\n  }\n\n  setValue(setter, event) {\n    this.set(setter, event.target.value);\n  }\n\n  updateNewMessage(event) {\n    console.log(event.target.value, event.target.value.length, event.target.value.substring(0, this.MaxMessageLength));\n    if (event.target.value.length > this.MaxMessageLength) return this.set(\"newMessage\", event.target.value.substring(0, this.MaxMessageLength));\n    this.set(\"newMessage\", event.target.value);\n  }\n\n  sendMessage() {\n    let msg = new Message(this.state.room.roomCode, this.state.newMessage, this.state.user.userName, UserService.token()); //this.socket.emit(\"broadcast-message\", this.state.room.roomCode, this.state.newMessage, this.state.user.userName, this.props.data.persistentToken)\n\n    this.socket.emit(\"broadcast-message\", this.state.room.roomCode, msg);\n    this.set(\"newMessage\", \"\");\n  }\n\n  endRoom() {\n    this.socket.emit(\"end-room\", this.state.room.roomCode);\n    this.detachFromRoom();\n  }\n\n  detachFromRoom() {\n    this.set(\"room\", null);\n    this.socket.close();\n    this.socket = null;\n    this.set(\"status\", \"closed\");\n  }\n\n  leaveRoom() {\n    this.socket.emit(\"leave-room\", this.roomCode);\n    this.detachFromRoom();\n    this.props.history.push(\"/\");\n  }\n\n  removeUser(msg) {}\n\n  exitClosedRoom() {\n    this.props.history.push(\"/\");\n  }\n\n  removeMessage(msg) {\n    alert(\"user will be banned\");\n    console.log(msg, this.state.room.roomCode, msg);\n    this.socket.emit(\"ban-user\", this.state.room.roomCode, msg);\n  }\n\n  onAddReaction(emoji, msg) {\n    this.socket.emit(\"add-reaction\", this.state.room.roomCode, msg, emoji);\n  }\n\n  closeMessageOptions() {\n    this.setState({\n      messageOptionsIsVisible: false\n    });\n  }\n\n  showMessageOptions(msg) {\n    console.log(msg);\n    this.setState({\n      messageOptionsIsVisible: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"page-root chatroom-root\",\n      children: [!this.state.render ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 38\n      }, this) : null, this.state.render && this.state.status == \"404\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"STATUS 404\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 65\n      }, this) : null, this.state.render && this.state.status == \"200\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", this.state.room && this.state.status !== \"closed\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"chatroom-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"title-view\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"title-text\",\n              children: this.state.room.roomName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), this.state.isAdmin ? /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"leave-text\",\n              children: \"end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"leave-text\",\n              children: \"leave\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"chatroom-messages-view\",\n            children: this.state.messages ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.state.messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n                onClick: () => this.showMessageOptions(msg),\n                onReportMessage: this.removeMessage,\n                message: msg,\n                text: msg.message,\n                userName: msg.userName,\n                reactions: msg.reactions,\n                onAddReaction: emoji => this.onAddReaction(emoji, msg),\n                isUser: UserService.token() === msg.userToken\n              }, msg.messageID, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 29\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"typed-message-view\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              class: \"typed-message-input\",\n              ref: c => this.textarea = c,\n              rows: 3,\n              defaultValue: \"\",\n              value: this.state.newMessage,\n              onChange: this.updateNewMessage.bind(this),\n              class: \"typed-message-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"material-icons send-message-btn\",\n              onClick: this.sendMessage.bind(this),\n              children: /*#__PURE__*/_jsxDEV(FaTelegramPlane, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"character-count\",\n              children: [this.state.newMessage.length, \"/\", this.MaxMessageLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 25\n        }, this) : null, this.state.status === \"closed\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"title-leave-btn\",\n            onClick: this.exitClosedRoom.bind(this),\n            children: \"leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" room is closed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 21\n        }, this) : null, this.state.status === \"banned\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"title-leave-btn\",\n            onClick: this.exitClosedRoom.bind(this),\n            children: \"leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \" you've been removed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n          width: \"80%\",\n          visible: this.state.messageOptionsIsVisible,\n          onCancel: this.closeMessageOptions.bind(this),\n          footer: null,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info-modal\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \" Remove User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js"],"names":["withRouter","React","io","autosize","ChatMessage","SocketManager","Message","FaTelegramPlane","Modal","Button","UserService","FirebaseUtil","Chat","Component","constructor","props","state","room","user","isAdmin","newMessage","messages","status","messageOptionsIsVisible","render","textarea","removeMessage","bind","onAddReaction","showMessageOptions","MaxMessageLength","socket","queryParams","searchString","history","location","search","substring","split","pair","i","length","setState","err","console","log","findRoomById","data","adminID","token","componentDidMount","connectSocket","socketEvents","componentDidUpdate","previousProps","previousState","prevProps","prevState","myProps","myProp","transport","set","field","value","on","connection","createRoom","emit","roomCode","persistentToken","tkn","localStorage","setItem","messages_","message","close","detachFromRoom","setValue","setter","event","target","updateNewMessage","sendMessage","msg","userName","endRoom","leaveRoom","push","removeUser","exitClosedRoom","alert","emoji","closeMessageOptions","roomName","map","reactions","userToken","messageID","c"],"mappings":"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","sourcesContent":["import './Chatroom.css';\nimport { withRouter} from 'react-router-dom';\n\nimport React from 'react';\nimport io from 'socket.io-client';\nimport autosize from \"autosize\";\n\n\n\nimport ChatMessage from './ChatMessage';\nimport SocketManager from './Socket'\nimport Message from '../Models/MessageModel'\n\nimport { FaTelegramPlane } from \"react-icons/fa\";\nimport { Modal, Button } from 'antd';\nimport { UserService } from '../FirebaseUtil/UserService';\nimport { FirebaseUtil } from '../FirebaseUtil/FirebaseUtil';\n\n\n\n\n\n\n\n// \"bnh5yzdirjinqaorq0ox1tf383nb3xr\"\n\nclass Chat extends React.Component{\n\n\n    constructor(props){\n\n        super(props)\n\n        this.state = {\n            room: null,\n            user: null,\n            isAdmin: \"\",\n            newMessage: \"\",\n            messages: [],\n            status: \"\",\n            messageOptionsIsVisible: false,\n            render:false\n        }\n\n        ////bind functions\n        this.textarea = <textarea/>\n        this.removeMessage =this.removeMessage.bind(this)\n        this.onAddReaction = this.onAddReaction.bind(this)\n        this.showMessageOptions = this.showMessageOptions.bind(this)\n\n        //other variables\n        this.MaxMessageLength = 140;\n        this.socket = null; \n\n        //query parameters\n        let queryParams = {}\n        try{\n            let searchString = this.props.history.location.search.substring(1).split('&')\n            let pair = []\n\n            for(var i=0;i<searchString.length;i++){\n                pair = searchString[i].split('=')\n                queryParams[pair[0]] = pair[1]\n            }\n\n            if(!queryParams.room)  return this.setState({status: \"404\"})\n        }catch(err){\n            console.log(\"query param err: \", err)\n            this.setState({status: \"404\"})\n            return\n            \n        }\n    \n        /*FirebaseUtil.findRoom(roomCode).then(doc =>{\n            console.log(doc.data())\n        })*/\n\n\n        ( async() => {\n        /////find room\n        let room ;\n        if(this.props.location.state) room = this.props.location.state.room\n        else{\n            room = await FirebaseUtil.findRoomById(queryParams.room)\n            console.log(room)\n        } \n        if(!room){\n            this.setState({status: \"404\"})\n            this.setState({render: true})\n            return\n        }\n\n        //set state\n        this.setState = ({\n            room: room,\n            user: this.props.data.user,\n            isAdmin: room.adminID == UserService.token(),\n            newMessage: \"\",\n            messages: [],\n            status: \"200\",\n            messageOptionsIsVisible: false,\n            render:true\n        })\n\n        console.log(this.state.room)\n\n        })()\n        \n\n\n\n     //})()\n\n        \n    }\n\n    \n    componentDidMount(){\n\n\n        if(this.state.status == \"404\"){\n            //this.props.history.push(\"/\")\n            //return\n            return\n       }else if(this.state.render){\n\n            //if(!this.state.room)this.props.history.push(\"/\")\n            if(true){\n                this.connectSocket()\n                this.socketEvents()\n            }\n            //http://localhost:3000/chat?=Yu9uIlEncb8flTfFxv14.focus();\n            autosize(this.textarea);\n        }\n    }\n\n    componentDidUpdate(previousProps, previousState){\n\n        console.log(previousProps, previousState)\n        if(this.state.render){\n\n            //if(!this.state.room)this.props.history.push(\"/\")\n            if(true){\n                this.connectSocket()\n                this.socketEvents()\n            }\n            //http://localhost:3000/chat?=Yu9uIlEncb8flTfFxv14.focus();\n            autosize(this.textarea);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n      }\n\n\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.myProps !== this.props.myProp) {\n          // this.props.myProp has a different value\n          // ...\n        }\n      }\n\n    connectSocket(){\n        this.socket = io(\"http://192.168.1.9:1234\", { transport: ['websocket']}) ;\n    }\n\n\n    set(field, value){\n        this.setState({[field]: value})\n    }\n\n    socketEvents(){\n\n        \n        //socket functions\n        this.socket.on('connect', (connection) => {\n           \n            if(this.state.isAdmin){\n                SocketManager.createRoom(this)\n            }else{\n                this.socket.emit('join-room', this.state.room.roomCode,  this.props.data.persistentToken)\n            }\n            console.log(\"connected.\")\n\n            this.socket.on('generated-user-token', (tkn) => {\n                this.props.data.persistentToken = tkn;\n                localStorage.setItem(\"persistentToken\", tkn)\n                console.log(\"new token generated: \",tkn)\n            });\n\n\n            this.socket.on('backlog-messages', (messages_) => {\n                this.set(\"messages\",messages_ )\n                this.set(\"status\", \"loaded\")\n                console.log(\"backlog: \", messages_)\n\n            });\n\n            this.socket.on('broadcasted-message', (message) => {\n                this.set(\"messages\", [...this.state.messages,message])\n            });\n\n            this.socket.on('room-ended', () => {\n                console.log(\"room ended. \")\n                this.socket.close()\n                this.detachFromRoom()\n            });\n\n            this.socket.on('removed-message', (messages_) => {\n                this.set(\"messages\",messages_ )\n                console.log(\"messages updated: \", messages_)\n            });\n\n            this.socket.on('update-message', (messages_) => {\n                this.set(\"messages\",messages_ )\n                console.log(\"messages updated: \", messages_)\n            });\n\n            this.socket.on('find-and-ban-user', (token) => {\n                console.log(\"user has been banned.\")\n                console.log(token === this.props.data.persistentToken)\n                console.log(token, this.props.data.persistentToken)\n\n                \n                if(token === this.props.data.persistentToken){\n                    this.detachFromRoom();\n                    this.set(\"status\",\"banned\" )\n\n                }\n            });\n\n        });\n\n   \n\n\n\n    }\n\n    setValue(setter, event){\n        this.set(setter, event.target.value)\n    }\n\n    updateNewMessage(event){\n\n        console.log(event.target.value, event.target.value.length, event.target.value.substring(0,this.MaxMessageLength))\n        if(event.target.value.length>this.MaxMessageLength)return this.set(\"newMessage\" ,event.target.value.substring(0,this.MaxMessageLength))\n        this.set(\"newMessage\" ,event.target.value)\n    }\n\n    sendMessage(){\n        let msg = new Message(this.state.room.roomCode, this.state.newMessage, this.state.user.userName, UserService.token())\n        //this.socket.emit(\"broadcast-message\", this.state.room.roomCode, this.state.newMessage, this.state.user.userName, this.props.data.persistentToken)\n        this.socket.emit(\"broadcast-message\", this.state.room.roomCode, msg)\n        this.set(\"newMessage\", \"\")\n    }\n\n    endRoom(){\n        this.socket.emit(\"end-room\", this.state.room.roomCode)\n        this.detachFromRoom()\n    }\n\n    detachFromRoom(){\n        this.set(\"room\",null)\n        this.socket.close()\n        this.socket = null;\n        this.set(\"status\", \"closed\")\n    }\n\n    leaveRoom(){\n        this.socket.emit(\"leave-room\", this.roomCode)\n        this.detachFromRoom();\n        this.props.history.push(\"/\")\n    }\n\n    removeUser(msg){\n       \n        \n    }\n    \n    exitClosedRoom(){\n        this.props.history.push(\"/\")\n    }\n\n    removeMessage(msg){\n        alert(\"user will be banned\")\n        console.log(msg,  this.state.room.roomCode, msg)\n        this.socket.emit(\"ban-user\", this.state.room.roomCode, msg)\n    }\n\n    onAddReaction(emoji, msg){\n        this.socket.emit(\"add-reaction\", this.state.room.roomCode, msg, emoji)\n    }\n\n    closeMessageOptions(){\n        this.setState({messageOptionsIsVisible: false})\n    }\n\n\n    showMessageOptions(msg){\n        console.log(msg)\n        this.setState({messageOptionsIsVisible: true})\n    }\n\n  \n    render(){\n\n        return (\n            \n            <div class=\"page-root chatroom-root\">\n                {!this.state.render? <div>Loading</div>:null}\n                {this.state.render && this.state.status==\"404\"? <div>STATUS 404</div>:null}\n                {this.state.render && this.state.status==\"200\"?\n                    <div> {this.state.room && this.state.status !== \"closed\" ?\n                        <div class=\"chatroom-view\">\n                        \n                        <div class=\"title-view\">\n            \n                            <span class=\"title-text\">{this.state.room.roomName}</span>\n                            {/*this.state.isAdmin?\n                                <p class=\"title-leave-btn\"  onClick={this.endRoom.bind(this)}>end room</p>:\n                                <p class=\"title-leave-btn\"  onClick={this.leaveRoom.bind(this)}>leave</p>\n                            */ }\n                        {this.state.isAdmin?\n                                <span class=\"leave-text\">end</span>:\n                                <span class=\"leave-text\">leave</span>\n                        }\n\n                \n                        </div>\n                    \n                        <div class=\"chatroom-messages-view\">\n                    \n                            {this.state.messages?\n                            <div>\n                                {this.state.messages.map(msg=> \n                                <ChatMessage \n                                    onClick={()=> this.showMessageOptions(msg)} \n                                    onReportMessage={this.removeMessage}\n                                    message ={msg}\n                                    key={msg.messageID} \n                                    text={msg.message} \n                                    userName={msg.userName } \n                                    reactions = {msg.reactions}\n                                    onAddReaction={(emoji=>this.onAddReaction(emoji, msg))}\n                                    isUser={UserService.token()=== msg.userToken }/>)}\n                            </div>\n                                :null\n                            }\n                \n                            </div>\n\n                            <div class=\"typed-message-view\">\n                            <textarea\n                                class=\"typed-message-input\"\n                                ref={c => (this.textarea = c)}\n                                rows={3}\n                                defaultValue=\"\"\n                                value={this.state.newMessage} \n                                onChange={this.updateNewMessage.bind(this) }\n                                class=\"typed-message-input\"\n                                />\n            \n                            \n                                <i class=\"material-icons send-message-btn\" \n                                    onClick={this.sendMessage.bind(this)}\n                                ><FaTelegramPlane/></i>\n                                <span className=\"character-count\">{this.state.newMessage.length}/{this.MaxMessageLength}</span>\n                            </div>\n                \n                        </div>\n                        :null\n                    }\n\n                    {this.state.status === \"closed\"?\n                    <div>\n                        <p class=\"title-leave-btn\"  onClick={this.exitClosedRoom.bind(this)}>leave</p>\n                        <p> room is closed.</p>\n                    </div>:\n                        null\n                    }\n\n                    {this.state.status === \"banned\"?\n                    <div>\n                        <p class=\"title-leave-btn\"  onClick={this.exitClosedRoom.bind(this)}>leave</p>\n                        <p> you've been removed.</p>\n                    </div>:\n                        null\n                    }\n\n\n                    <Modal  width=\"80%\" visible={this.state.messageOptionsIsVisible}  onCancel={this.closeMessageOptions.bind(this)} footer={null}>\n                        <div className=\"message-info-modal\">\n                        <button > Remove User</button>\n                        </div>\n                        \n                    </Modal>\n\n\n\n\n\n                    </div>\n\n                    :null\n                }\n\n            </div>\n\n\n\n\n\n\n        );\n\n        \n    }\n    \n}\n\nexport default withRouter(Chat);\n"]},"metadata":{},"sourceType":"module"}