{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js\";\nimport './chatroom.css';\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport io from 'socket.io-client';\nimport autosize from \"autosize\";\nimport ChatMessage from './ChatMessage';\nimport SocketManager from './Socket';\nimport Message from '../Models/MessageModel';\nimport { FaTelegramPlane, FaWizardsOfTheCoast } from \"react-icons/fa\";\nimport { Modal, Button } from 'antd';\nimport UserService from '../Services/UserService.js';\nimport { FirebaseUtil } from '../Services/FirebaseUtil';\nimport User from '../Models/UserModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.state = {\n      room: null,\n      user: null,\n      isAdmin: \"\",\n      newMessage: \"\",\n      messages: [],\n      status: \"\",\n      messageOptionsIsVisible: false,\n      render: false\n    }; ////bind functions\n\n    this.textarea = /*#__PURE__*/_jsxDEV(\"textarea\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this);\n    this.messagesEnd = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }, this);\n    this.showModal = this.showModal.bind(this);\n    this.removeMessage = this.removeMessage.bind(this);\n    this.onAddReaction = this.onAddReaction.bind(this);\n    this.showMessageOptions = this.showMessageOptions.bind(this); //other variables\n\n    this.MaxMessageLength = 140;\n    this.socket = null;\n    this.room = null;\n  }\n\n  componentDidMount() {\n    //query parameters\n    let queryParams = {};\n\n    try {\n      let searchString = this.props.history.location.search.substring(1).split('&');\n      let pair = [];\n\n      for (var i = 0; i < searchString.length; i++) {\n        pair = searchString[i].split('=');\n        queryParams[pair[0]] = pair[1];\n      } //if no room in parameters status 404\n\n\n      if (!queryParams.room) return this.setState({\n        status: \"404\"\n      });\n    } catch (err) {\n      //if paramaters not complete status 404\n      console.log(\"query paramater err: \", err);\n      this.setState({\n        render: true\n      });\n      this.setState({\n        status: \"404\"\n      });\n      return;\n    }\n\n    (async () => {\n      /////find room\n      let room;\n      if (this.props.location.state) room = this.props.location.state.room;else room = await FirebaseUtil.findRoomById(queryParams.room);\n\n      if (!UserService.userName()) {\n        this.props.history.push({\n          pathname: '/joinroom',\n          search: \"\",\n          state: {\n            room: room\n          }\n        });\n        return;\n      } //if room not found then render a ror page\n\n\n      if (!room) {\n        this.setState({\n          status: \"404\"\n        });\n        this.setState({\n          render: true\n        });\n        return;\n      }\n\n      this.room = room;\n      console.log(UserService.userName()); //set state\n\n      this.setState({\n        room: room,\n        user: {\n          userName: UserService.userName(),\n          userID: UserService.token()\n        },\n        isAdmin: room.adminID == UserService.token(),\n        newMessage: \"\",\n        messages: [],\n        status: \"200\",\n        messageOptionsIsVisible: false,\n        modalVisible: false,\n        modal: {\n          state: \"\"\n        },\n        render: true\n      });\n      console.log(\"this room is: \", room); //connect sockets\n\n      this.connectSocket();\n      this.socketEvents();\n      autosize(this.textarea);\n    })();\n  }\n\n  queryParameters() {\n    let queryParams = {};\n    let searchString = this.props.history.location.search.substring(1).split('&');\n    let pair = [];\n\n    for (var i = 0; i < searchString.length; i++) {\n      pair = searchString[i].split('=');\n      queryParams[pair[0]] = pair[1];\n    }\n  }\n\n  connectSocket() {\n    this.socket = io(\"http://192.168.1.9:1234\", {\n      transport: ['websocket']\n    });\n  }\n\n  set(field, value) {\n    this.setState({\n      [field]: value\n    });\n  }\n\n  socketEvents() {\n    //socket functions\n    this.socket.on('connect', connection => {\n      if (this.state.isAdmin) {\n        console.log(UserService.getUserID());\n        SocketManager.createRoom(this);\n      } else {\n        this.socket.emit('join-room', this.room.roomCode, UserService.getUserID());\n      }\n\n      console.log(\"connected.\");\n      this.socket.on('backlog-messages', messages_ => {\n        this.set(\"messages\", messages_);\n        this.set(\"status\", \"200\");\n        console.log(\"backlog: \", messages_);\n      });\n      this.socket.on('broadcasted-message', message => {\n        console.log(\"received\");\n        this.set(\"messages\", [...this.state.messages, message]);\n      });\n      this.socket.on('room-ended', () => {\n        console.log(\"room ended. \");\n        this.detachFromRoom();\n        this.set(\"status\", \"exit\");\n      });\n      this.socket.on('removed-message', (messages_, userID) => {\n        this.set(\"messages\", messages_);\n        if (userID == UserService.getUserID()) this.setState({\n          status: \"303\"\n        });\n        console.log(userID);\n        console.log(UserService.getUserID());\n        console.log(userID == UserService.getUserID());\n        console.log(\"messages updated: \", messages_);\n      });\n      this.socket.on('update-message', messages_ => {\n        this.set(\"messages\", messages_);\n        console.log(\"messages updated: \", messages_);\n      });\n    });\n  }\n\n  setValue(setter, event) {\n    this.set(setter, event.target.value);\n  }\n\n  updateNewMessage(event) {\n    console.log(event.target.value, event.target.value.length, event.target.value.substring(0, this.MaxMessageLength));\n    if (event.target.value.length > this.MaxMessageLength) return this.set(\"newMessage\", event.target.value.substring(0, this.MaxMessageLength));\n    this.set(\"newMessage\", event.target.value);\n  }\n\n  sendMessage() {\n    let msg = new Message(this.state.room.roomCode, this.state.newMessage, this.state.user.userName, UserService.token());\n    this.socket.emit(\"broadcast-message\", this.state.room.roomCode, msg);\n    this.set(\"newMessage\", \"\");\n  }\n\n  endRoom() {\n    console.log('end');\n    this.socket.emit(\"end-room\", this.state.room.roomCode);\n    this.detachFromRoom();\n    this.setState({\n      status: \"exit\"\n    });\n  }\n\n  detachFromRoom() {\n    //this.set(\"room\",null)\n    this.socket.close();\n    delete this.socket; //this.set(\"status\", \"exit\")\n  }\n\n  leaveRoom() {\n    this.socket.emit(\"leave-room\", this.roomCode);\n    this.detachFromRoom();\n    this.props.history.push(\"/\");\n  }\n\n  removeUser(msg) {}\n\n  exitClosedRoom() {\n    this.props.history.push(\"/\");\n  }\n\n  removeMessage(msg) {\n    console.log(\"removing: \", msg, this.state.room.roomCode, msg);\n    this.socket.emit(\"ban-user\", this.state.room.roomCode, msg);\n  }\n\n  onAddReaction(emoji, msg) {\n    this.socket.emit(\"add-reaction\", this.state.room.roomCode, msg, emoji);\n  }\n\n  closeMessageOptions() {\n    this.setState({\n      modalVisible: false\n    });\n    this.setState({\n      modal: {\n        state: \"\"\n      }\n    });\n    this.setState({\n      messageOptionsIsVisible: false\n    });\n  }\n\n  showMessageOptions(msg) {\n    this.setState({\n      messageOptionsIsVisible: true\n    });\n  }\n\n  componentDidUpdate(prevState, currState) {\n    //console.log(prevState, currState)\n    if (this.state.render && this.state.status == \"200\") this.scrollToBottom();\n  }\n\n  showModal(state, data = null) {\n    console.log(state);\n    this.setState({\n      modal: {\n        state: state,\n        data: data\n      }\n    });\n    this.setState({\n      modalVisible: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"chatroom-root\",\n      children: [!this.state.render ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 38\n      }, this) : null, this.state.render && this.state.status == \"404\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"STATUS 404\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 67\n      }, this) : null, this.state.render && this.state.status == \"exit\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"room ended by admin.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 68\n      }, this) : null, this.state.render && this.state.status == \"303\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"you've been removed from this room.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 67\n      }, this) : null, this.state.render && this.state.status == \"200\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chatroom-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"title-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"title-text\",\n            children: this.state.room.roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), this.state.isAdmin ? /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => this.showModal(\"end-room\"),\n            class: \"leave-text\",\n            children: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: this.leaveRoom.bind(this),\n            class: \"leave-text\",\n            children: \"leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"subtitle-view\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"subtitle-text\",\n              children: [\"code: \", this.state.room.roomCode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"chatroom-messages-view\",\n          children: this.state.messages ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [this.state.messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n              onClick: () => this.showModal(\"ban-user\", msg),\n              onReportMessage: this.removeMessage,\n              message: msg,\n              text: msg.message,\n              userName: msg.userName,\n              reactions: msg.reactions,\n              onAddReaction: emoji => this.onAddReaction(emoji, msg),\n              isUser: UserService.token() === msg.userToken\n            }, msg.messageID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                float: \"left\",\n                clear: \"both\"\n              },\n              ref: el => {\n                this.messagesEnd = el;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 40\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"typed-message-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            class: \"typed-message-input\",\n            ref: c => this.textarea = c,\n            rows: 3,\n            defaultValue: \"\",\n            value: this.state.newMessage,\n            onChange: this.updateNewMessage.bind(this),\n            class: \"typed-message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"material-icons send-message-btn\",\n            onClick: this.sendMessage.bind(this),\n            children: /*#__PURE__*/_jsxDEV(FaTelegramPlane, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"character-count\",\n            children: [this.state.newMessage.length, \"/\", this.MaxMessageLength]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          width: \"80%\",\n          visible: this.state.modalVisible,\n          onCancel: this.closeMessageOptions.bind(this),\n          footer: null,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info-modal\",\n            children: [this.state.modal.state == \"end-room\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Are you sure you want to end room? All members will be kicked out.\", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.endRoom.bind(this),\n                children: \" End Room\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 37\n            }, this) : null, this.state.modal.state == \"ban-user\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.removeMessage(this.state.modal.data),\n                children: \" Remove User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js"],"names":["withRouter","React","io","autosize","ChatMessage","SocketManager","Message","FaTelegramPlane","FaWizardsOfTheCoast","Modal","Button","UserService","FirebaseUtil","User","Chat","Component","constructor","props","scrollToBottom","messagesEnd","scrollIntoView","behavior","state","room","user","isAdmin","newMessage","messages","status","messageOptionsIsVisible","render","textarea","showModal","bind","removeMessage","onAddReaction","showMessageOptions","MaxMessageLength","socket","componentDidMount","queryParams","searchString","history","location","search","substring","split","pair","i","length","setState","err","console","log","findRoomById","userName","push","pathname","userID","token","adminID","modalVisible","modal","connectSocket","socketEvents","queryParameters","transport","set","field","value","on","connection","getUserID","createRoom","emit","roomCode","messages_","message","detachFromRoom","setValue","setter","event","target","updateNewMessage","sendMessage","msg","endRoom","close","leaveRoom","removeUser","exitClosedRoom","emoji","closeMessageOptions","componentDidUpdate","prevState","currState","data","roomName","map","reactions","userToken","messageID","float","clear","el","c"],"mappings":"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","sourcesContent":["import './chatroom.css';\nimport { withRouter} from 'react-router-dom';\n\nimport React from 'react';\nimport io from 'socket.io-client';\nimport autosize from \"autosize\";\n\n\n\nimport ChatMessage from './ChatMessage';\nimport SocketManager from './Socket'\nimport Message from '../Models/MessageModel'\n\nimport { FaTelegramPlane, FaWizardsOfTheCoast } from \"react-icons/fa\";\nimport { Modal, Button } from 'antd';\nimport  UserService  from '../Services/UserService.js';\nimport { FirebaseUtil } from '../Services/FirebaseUtil';\nimport User from '../Models/UserModel';\n\n\nclass Chat extends React.Component{\n\n\n    constructor(props){\n\n        super(props)\n\n        this.state = {\n            room: null,\n            user: null,\n            isAdmin: \"\",\n            newMessage: \"\",\n            messages: [],\n            status: \"\",\n            messageOptionsIsVisible: false,\n            render:false\n        }\n\n        ////bind functions\n        this.textarea = <textarea/>\n        this.messagesEnd = <div/>\n        this.showModal = this.showModal.bind(this)\n        this.removeMessage =this.removeMessage.bind(this)\n        this.onAddReaction = this.onAddReaction.bind(this)\n        this.showMessageOptions = this.showMessageOptions.bind(this)\n\n        //other variables\n        this.MaxMessageLength = 140;\n        this.socket = null; \n        this.room = null;\n        \n    }\n\n\n    componentDidMount(){\n\n        //query parameters\n        let queryParams = {}\n        try{\n            let searchString = this.props.history.location.search.substring(1).split('&')\n            let pair = []\n            for(var i=0;i<searchString.length;i++){\n                pair = searchString[i].split('=')\n                queryParams[pair[0]] = pair[1]\n            }\n            //if no room in parameters status 404\n            if(!queryParams.room)  return this.setState({status: \"404\"})\n        }catch(err){\n            //if paramaters not complete status 404\n            console.log(\"query paramater err: \", err)\n            this.setState({render: true})\n            this.setState({status: \"404\"})\n            return\n            \n        }\n\n\n        ( async() => {\n        /////find room\n        let room ;\n        if(this.props.location.state) room = this.props.location.state.room\n        else room = await FirebaseUtil.findRoomById(queryParams.room)\n\n        if(!UserService.userName()){\n            this.props.history.push({\n                pathname: '/joinroom',\n                search: \"\",\n                state: { room: room}\n            })\n\n            return\n        }\n        //if room not found then render a ror page\n        if(!room){\n            this.setState({status: \"404\"})\n            this.setState({render: true})\n            return\n        }\n\n        this.room = room;\n        console.log(UserService.userName())\n        //set state\n        this.setState({\n            room: room,\n            user: {userName: UserService.userName(), userID: UserService.token() },\n            isAdmin: room.adminID == UserService.token(),\n            newMessage: \"\",\n            messages: [],\n            status: \"200\",\n            messageOptionsIsVisible: false,\n            modalVisible: false,\n            modal:{state:\"\"},\n            render:true\n        })\n\n        console.log(\"this room is: \", room)\n\n        //connect sockets\n        this.connectSocket()\n        this.socketEvents()\n\n        autosize(this.textarea);\n\n\n    })()\n\n    }\n\n    queryParameters(){\n        let queryParams = {}\n        let searchString = this.props.history.location.search.substring(1).split('&')\n        let pair = []\n\n        for(var i=0;i<searchString.length;i++){\n            pair = searchString[i].split('=')\n            queryParams[pair[0]] = pair[1]\n        }\n    }\n\n    connectSocket(){\n        this.socket = io(\"http://192.168.1.9:1234\", { transport: ['websocket']}) ;\n    }\n\n\n    set(field, value){\n        this.setState({[field]: value})\n    }\n\n    socketEvents(){\n\n        \n        //socket functions\n        this.socket.on('connect', (connection) => {\n           \n            if(this.state.isAdmin){\n                console.log(UserService.getUserID())\n                SocketManager.createRoom(this)\n            }else{\n                this.socket.emit('join-room', this.room.roomCode,  UserService.getUserID())\n            }\n            console.log(\"connected.\")\n\n            this.socket.on('backlog-messages', (messages_) => {\n                this.set(\"messages\",messages_ )\n                this.set(\"status\", \"200\")\n                console.log(\"backlog: \", messages_)\n\n                \n\n\n            });\n\n            this.socket.on('broadcasted-message', (message) => {\n                console.log(\"received\")\n                this.set(\"messages\", [...this.state.messages,message])\n            });\n\n            this.socket.on('room-ended', () => {\n                console.log(\"room ended. \")\n                this.detachFromRoom()\n                this.set(\"status\", \"exit\")\n            });\n\n            this.socket.on('removed-message', (messages_, userID) => {\n                this.set(\"messages\",messages_ )\n                if(userID == UserService.getUserID()) this.setState({status:\"303\"})\n                console.log(userID)\n                console.log(UserService.getUserID())\n                console.log(userID == UserService.getUserID())\n                console.log(\"messages updated: \", messages_)\n            });\n\n            this.socket.on('update-message', (messages_) => {\n                this.set(\"messages\",messages_ )\n                console.log(\"messages updated: \", messages_)\n            });\n\n\n        });\n\n   \n\n\n\n    }\n\n    setValue(setter, event){\n        this.set(setter, event.target.value)\n    }\n\n    updateNewMessage(event){\n\n        console.log(event.target.value, event.target.value.length, event.target.value.substring(0,this.MaxMessageLength))\n        if(event.target.value.length>this.MaxMessageLength)return this.set(\"newMessage\" ,event.target.value.substring(0,this.MaxMessageLength))\n        this.set(\"newMessage\" ,event.target.value)\n    }\n\n    sendMessage(){\n        let msg = new Message(this.state.room.roomCode, this.state.newMessage, this.state.user.userName, UserService.token())\n        this.socket.emit(\"broadcast-message\", this.state.room.roomCode, msg)\n        this.set(\"newMessage\", \"\")\n    }\n\n    endRoom(){\n        console.log('end')\n        this.socket.emit(\"end-room\", this.state.room.roomCode)\n        this.detachFromRoom()\n        this.setState({status: \"exit\"})\n    }\n\n    detachFromRoom(){\n        //this.set(\"room\",null)\n        this.socket.close()\n        delete this.socket;\n        //this.set(\"status\", \"exit\")\n    }\n\n    leaveRoom(){\n        this.socket.emit(\"leave-room\", this.roomCode)\n        this.detachFromRoom();\n        this.props.history.push(\"/\")\n    }\n\n    removeUser(msg){\n       \n        \n    }\n    \n    exitClosedRoom(){\n        this.props.history.push(\"/\")\n    }\n\n    removeMessage(msg){\n        console.log(\"removing: \", msg,  this.state.room.roomCode, msg)\n        this.socket.emit(\"ban-user\", this.state.room.roomCode, msg)\n    }\n\n    onAddReaction(emoji, msg){\n        this.socket.emit(\"add-reaction\", this.state.room.roomCode, msg, emoji)\n    }\n\n    closeMessageOptions(){\n        this.setState({modalVisible: false})\n        this.setState({modal: {state:\"\"}})\n        this.setState({messageOptionsIsVisible: false})\n    }\n\n\n    showMessageOptions(msg){\n        this.setState({messageOptionsIsVisible: true})\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n      }\n    componentDidUpdate(prevState, currState) {\n        //console.log(prevState, currState)\n        if(this.state.render && this.state.status ==\"200\")this.scrollToBottom();\n      }\n\n      showModal(state,data=null){\n          console.log(state)\n          this.setState({modal: {state:state, data:data}})\n          this.setState({modalVisible: true})\n          \n      }\n  \n    render(){\n\n        return (\n            \n            <div class=\"chatroom-root\">\n                {!this.state.render? <div>Loading</div>:null}\n                {(this.state.render && this.state.status==\"404\")? <div>STATUS 404</div>:null}\n                {(this.state.render && this.state.status==\"exit\")? <div>room ended by admin.</div>:null}\n                {(this.state.render && this.state.status==\"303\")? <div>you've been removed from this room.</div>:null}\n\n                {(this.state.render && this.state.status ==\"200\" )?\n        \n                        <div class=\"chatroom-view\">\n                        \n                        <div class=\"title-view\">\n            \n                            <span class=\"title-text\">{this.state.room.roomName}</span>\n                            {/*this.state.isAdmin?\n                                <p class=\"title-leave-btn\"  onClick={this.endRoom.bind(this)}>end room</p>:\n                                <p class=\"title-leave-btn\"  onClick={this.leaveRoom.bind(this)}>leave</p>\n                            */ }\n                        {this.state.isAdmin?\n                                <span onClick={()=>this.showModal(\"end-room\")}class=\"leave-text\">end</span>:\n                                <span onClick={this.leaveRoom.bind(this)} class=\"leave-text\">leave</span>\n                        }\n\n                       \n                        <div className=\"subtitle-view\">\n                            <p className=\"subtitle-text\">code: {this.state.room.roomCode}</p>\n                        </div>\n                    \n                \n                        </div>\n                  \n                        <div class=\"chatroom-messages-view\">\n                    \n                            {this.state.messages?\n                            <div>\n                                {this.state.messages.map(msg=> \n                                <ChatMessage \n                                    onClick={()=> this.showModal(\"ban-user\",msg)} \n                                    onReportMessage={this.removeMessage}\n                                    message ={msg}\n                                    key={msg.messageID} \n                                    text={msg.message} \n                                    userName={msg.userName } \n                                    reactions = {msg.reactions}\n                                    onAddReaction={(emoji=>this.onAddReaction(emoji, msg))}\n                                    isUser={UserService.token()=== msg.userToken }/>)}\n                                       <div style={{ float:\"left\", clear: \"both\" }}\n                                ref={(el) => { this.messagesEnd = el; }}>\n                            </div>\n                            </div>\n                                :null\n                                 }\n                \n                            </div>\n                         \n                        <div class=\"typed-message-view\">\n                            <textarea\n                                class=\"typed-message-input\"\n                                ref={c => (this.textarea = c)}\n                                rows={3}\n                                defaultValue=\"\"\n                                value={this.state.newMessage} \n                                onChange={this.updateNewMessage.bind(this) }\n                                class=\"typed-message-input\"\n                                />\n            \n                            \n                                <i class=\"material-icons send-message-btn\" \n                                    onClick={this.sendMessage.bind(this)}\n                                ><FaTelegramPlane/></i>\n                                <span className=\"character-count\">{this.state.newMessage.length}/{this.MaxMessageLength}</span>\n                            </div>\n                \n                        <Modal  width=\"80%\" visible={this.state.modalVisible}  onCancel={this.closeMessageOptions.bind(this)} footer={null}>\n                            <div className=\"message-info-modal\">\n                                {this.state.modal.state == \"end-room\"?\n                                    <div>\n                                        Are you sure you want to end room? All members will be kicked out.\n                                        <button onClick={this.endRoom.bind(this)}> End Room</button>\n\n                                    </div>:null\n                                }\n\n                                {this.state.modal.state == \"ban-user\"?\n                                    <div>\n                                    <button onClick={()=>this.removeMessage(this.state.modal.data)}> Remove User</button>\n                                    </div>:null\n                                }\n                            </div>\n                        \n                        </Modal>\n\n           \n                        </div>\n                      \n\n                    :null\n                }\n\n            </div>\n\n\n\n\n\n\n        );\n\n        \n    }\n    \n}\n\nexport default withRouter(Chat);\n"]},"metadata":{},"sourceType":"module"}