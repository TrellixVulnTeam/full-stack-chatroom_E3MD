{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js\",\n    _s = $RefreshSig$();\n\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ChatMessage(props) {\n  _s();\n\n  const [showReactions, setShowReactions] = useState(false);\n  const [reactions, setReactions] = useState(props.reactions);\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F', '0x2757'];\n\n  function onToggleReactions() {\n    setShowReactions(!showReactions);\n  }\n\n  function readEmoji(emoji) {\n    if (emoji[0] != '&') return emoji;\n    let pair = emoji.substring(1).split('&');\n    console.log(pair);\n    return pair;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message-view \" + (props.isUser ? \"user\" : \" \"),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message-text-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"username-text\",\n          children: props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), !props.isUser ? /*#__PURE__*/_jsxDEV(FaGrin, {\n          className: \"show-reaction-button\",\n          onClick: onToggleReactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 32\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"reaction-options \" + (showReactions ? \"cshow\" : \"chide\"),\n          children: reactionOptions.map(emoji => {\n            let code = \"\";\n            if (emoji[0] != '&') code = String.fromCodePoint(emoji);else code = String.fromCodePoint.apply(String, readEmoji(emoji));\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: () => {\n                props.onAddReaction(emoji);\n                onToggleReactions();\n              },\n              className: \"option\",\n              children: code\n            }, emoji, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 31\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"username-text reaction-bar \",\n          children: Object.keys(props.reactions).map(emoji => {\n            let code = \"\";\n            if (emoji[0] != '&') code = String.fromCodePoint(emoji);else code = String.fromCodePoint.apply(String, readEmoji(emoji));\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"reaction-tracking\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"reaction-emoji\",\n                children: props.reactions[emoji] > 0 ? props.reactions[emoji] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"reaction-count\",\n                children: code\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this)]\n            }, emoji, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: props.onClick,\n        className: \"chat-message-text \" + (props.isUser ? \"user\" : \" \"),\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatMessage, \"CV1/9cpFId1jR59OGBlqODwosYk=\");\n\n_c = ChatMessage;\nexport default ChatMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessage\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatMessage.js"],"names":["FaGrin","FaExclamationCircle","useState","ChatMessage","props","showReactions","setShowReactions","reactions","setReactions","reactionOptions","onToggleReactions","readEmoji","emoji","pair","substring","split","console","log","isUser","userName","map","code","String","fromCodePoint","apply","onAddReaction","Object","keys","onClick","text"],"mappings":"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","sourcesContent":["\nimport './ChatMessage.css';\nimport { FaGrin, FaExclamationCircle } from \"react-icons/fa\";\nimport{ useState} from 'react';\n\n\n\nfunction ChatMessage(props) {\n\n  const [showReactions, setShowReactions] = useState(false)\n  const [reactions, setReactions] = useState(props.reactions)\n  let reactionOptions = ['0x1F602', '&0x2764&0xFE0F', '0x2757']\n\n  function onToggleReactions(){\n    setShowReactions(!showReactions)\n  }\n\n  function readEmoji(emoji){\n    if(emoji[0] != '&')return emoji\n    let pair = emoji.substring(1).split('&');\n    console.log(pair)\n    return pair\n\n\n  }\n\n\n  return (\n      \n   \n    <div className={\"chat-message-view \"+ (props.isUser?\"user\":\" \")}>\n\n\n\n            <div className=\"chat-message-text-view\">\n\n              <div className=\"header\">\n                <p class=\"username-text\">{props.userName}</p> \n                {!props.isUser?<FaGrin  className=\"show-reaction-button\" onClick={onToggleReactions} ></FaGrin>:null}\n\n                <div class={\"reaction-options \"+ (showReactions?\"cshow\":\"chide\")}>\n                    {   reactionOptions.map(\n                          emoji =>{\n                            let code = \"\"\n                            if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n                            else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n                            return(\n                              <span key={emoji} onClick={()=>{props.onAddReaction(emoji); onToggleReactions()}} className=\"option\">{\n                                code\n                                }\n                                </span>\n                                \n                            )\n                        \n                          }\n                    )}\n                  </div>\n\n\n\n                <div class={\"username-text reaction-bar \"}>\n                  { Object.keys(props.reactions).map((emoji)=>{\n              \n                      let code = \"\"\n                      if(emoji[0] != '&')code = String.fromCodePoint(emoji)\n                      else code = String.fromCodePoint.apply(String, readEmoji(emoji))\n                      return(\n                            <span class={\"reaction-tracking\"} key={emoji}>\n                              <span class={\"reaction-emoji\"}>{props.reactions[emoji] > 0? props.reactions[emoji]: \"\"}</span>\n                            <span class={\"reaction-count\"} >{code}</span>\n                          </span>\n                      )\n                    })\n                  }\n              </div>\n  \n      \n              </div>\n                 \n              <p onClick={props.onClick} className={\"chat-message-text \"+ (props.isUser?\"user\":\" \")}>\n                  {props.text}\n              </p>\n  \n        </div>\n\n        \n        \n      \n\n\n\n\n\n    </div>\n    );\n}\n\nexport default ChatMessage;\n"]},"metadata":{},"sourceType":"module"}