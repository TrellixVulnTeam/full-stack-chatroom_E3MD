{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js\",\n    _s = $RefreshSig$();\n\n//STYLE SHEETS\nimport './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet'; //Third-party imports\n\nimport React, { useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport { withRouter } from \"react-router\"; //custom imports\n\nimport { FirebaseUtil } from '../FirebaseUtil/FirebaseUtil';\nimport UserService from '../FirebaseUtil.js';\nimport CustomInput from './CustomInput';\nimport User from '../Models/UserModel';\nimport Room from '../Models/RoomModel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateRoom(props) {\n  _s();\n\n  //info for user sign up\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\"); //const [UserService, setUserService] = useState(props.UserService)\n  //const [roomCode, setRoomCode] = useState(\"\")\n\n  useEffect(async () => {//register user\n  }, []); ////FUNCTIONS////\n  ////////////////\n\n  function setValue(setter, event) {\n    setter(event.target.value);\n  }\n\n  async function onCreateRoom() {\n    //validate user form\n    if (!userName) {\n      message.error(\"please enter a user name.\");\n      return;\n    } //create user profile\n\n\n    let userID = await FirebaseUtil.getUserToken();\n    let user = {\n      userName: userName,\n      userID: userID\n    };\n    console.log(UserService);\n    UserService.login(user);\n    props.data.user = user; //create a room\n\n    let room = await FirebaseUtil.createRoom(roomName, UserService.getUserID()); //go to chatroom\n\n    props.history.push({\n      pathname: '/chat',\n      search: \"?room=\" + room.roomID,\n      state: {\n        create: true,\n        room: room,\n        user: user\n      }\n    }); //Create room object //create user object\n    //update props// TODO: change to redux\n    //FirebaseUtil.createRoom(userName, UserService.token(), roomName).then(room=>{\n    //console.log(doc.data())\n    //let room = new Room(doc.id, roomName, UserService.token())\n    //let user = {userName: userName, userID: UserService.token()}\n    //props.data.user = user\n    //props.data.room = room;\n\n    /*props.history.push({\n      pathname: '/chat',\n      search: \"?room=\"+doc.id,\n      state: { create:true, room: room, user: user }\n    })*/\n    //change pages\n    // props.history.push(\"/chat?room=\"+doc.id)\n    //})\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-root create-room-root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-room-view\",\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Name Your Room\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setRoomName, event),\n        value: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Create a username.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setUserName, event),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCreateRoom,\n        style: styleSheet.smallbutton,\n        children: \" create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRoom, \"N7anKAxZoio56CXzOcGzmNkoUi0=\");\n\n_c = CreateRoom;\nexport default CreateRoom;\n/*\n\n  //open up connection to set up room\n      let socket_ = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n      //save connection\n      setSocket(socket_)\n\n      //once connected....\n      socket_.on('connect', (connection) => {\n        console.log(\"connected.\")\n        //get a code for the room\n        socket_.emit('generate-code')\n        socket_.on('generated-code', (code) => {\n          setRoomCode(code)\n        })\n\n      })\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js"],"names":["styleSheet","React","useState","useEffect","message","withRouter","FirebaseUtil","UserService","CustomInput","User","Room","CreateRoom","props","roomName","setRoomName","userName","setUserName","setValue","setter","event","target","value","onCreateRoom","error","userID","getUserToken","user","console","log","login","data","room","createRoom","getUserID","history","push","pathname","search","roomID","state","create","smallbutton"],"mappings":"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","sourcesContent":["\n//STYLE SHEETS\nimport './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet'\n\n//Third-party imports\nimport React, { useState,  useEffect} from 'react';\nimport { message} from 'antd';\nimport { withRouter } from \"react-router\";\n\n\n//custom imports\nimport {FirebaseUtil} from '../FirebaseUtil/FirebaseUtil';\nimport UserService from '../FirebaseUtil.js';\n\nimport CustomInput from './CustomInput'\nimport User from '../Models/UserModel'\nimport Room from '../Models/RoomModel'\n\n\nfunction CreateRoom(props) {\n\n    //info for user sign up\n    const [roomName, setRoomName] = useState(\"\")\n    const [userName, setUserName] = useState(\"\")\n    //const [UserService, setUserService] = useState(props.UserService)\n\n    //const [roomCode, setRoomCode] = useState(\"\")\n\n    \n    useEffect( async () => {\n\n        //register user\n\n\n    }, []);\n\n\n    ////FUNCTIONS////\n    ////////////////\n    function setValue(setter, event){\n        setter(event.target.value)\n    }\n\n    async function onCreateRoom(){\n\n\n      //validate user form\n      if(!userName){\n        message.error(\"please enter a user name.\");\n        return\n      }\n\n      //create user profile\n      let userID  = await FirebaseUtil.getUserToken();\n      let user = {userName: userName, userID: userID}\n      console.log(UserService)\n\n      UserService.login(user)\n      props.data.user = user\n      \n      //create a room\n      let room = await FirebaseUtil.createRoom( roomName, UserService.getUserID())\n\n      //go to chatroom\n      props.history.push({\n        pathname: '/chat',\n        search: \"?room=\"+room.roomID,\n        state: { create:true, room: room, user: user }\n      })\n        //Create room object //create user object\n        //update props// TODO: change to redux\n        //FirebaseUtil.createRoom(userName, UserService.token(), roomName).then(room=>{\n            //console.log(doc.data())\n            //let room = new Room(doc.id, roomName, UserService.token())\n            //let user = {userName: userName, userID: UserService.token()}\n            //props.data.user = user\n            //props.data.room = room;\n            /*props.history.push({\n              pathname: '/chat',\n              search: \"?room=\"+doc.id,\n              state: { create:true, room: room, user: user }\n            })*/\n            //change pages\n\n           // props.history.push(\"/chat?room=\"+doc.id)\n\n        //})\n    }\n  return (\n    <div className=\"page-root create-room-root\">\n\n\n      <div className=\"create-room-view\">\n\n            <CustomInput\n                title=\"Name Your Room\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setRoomName, event)}\n                value={roomName}\n            />\n\n            <CustomInput\n                title=\"Create a username.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setUserName, event)}\n                value={userName}\n            />\n  \n            {/*\n            <div className=\"share-view\">\n              <p className=\"caption\">Share this code to your room.</p>\n              <p className=\"caption-subtitle\">{roomCode}</p><br/>\n              <p className=\"caption\">Share this url to your room.</p>\n              <p className=\"caption-subtitle\">{\"websitename.com/chat?=\"+roomCode}</p>\n            </div>\n            */}\n\n            <button \n              onClick={onCreateRoom} \n              style={styleSheet.smallbutton}\n            > create\n            </button>\n\n      </div>\n      \n    </div>\n\n  );\n}\n\nexport default CreateRoom;\n\n\n/*\n\n  //open up connection to set up room\n      let socket_ = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n      //save connection\n      setSocket(socket_)\n\n      //once connected....\n      socket_.on('connect', (connection) => {\n        console.log(\"connected.\")\n        //get a code for the room\n        socket_.emit('generate-code')\n        socket_.on('generated-code', (code) => {\n          setRoomCode(code)\n        })\n\n      })\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */"]},"metadata":{},"sourceType":"module"}