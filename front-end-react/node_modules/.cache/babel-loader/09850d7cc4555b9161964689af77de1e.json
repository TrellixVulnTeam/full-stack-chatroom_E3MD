{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/JoinRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { withRouter } from 'react-router-dom'; //custom imports\n\nimport { FirebaseUtil } from '../FirebaseUtil/FirebaseUtil'; //import {UserService} from '../FirebaseUtil/UserService';\n\nimport styleSheet from '../Styles/StyleSheet';\nimport './JoinRoom.css';\nimport '../Styles/root-themes.css';\nimport CustomInput from './CustomInput';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction JoinRoom(props) {\n  _s();\n\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [UserService, setUserService] = useState(props.UserService);\n  const [preRoomModalVisible, setPreRoomModalVisible] = useState(false);\n\n  function setValue(setter, event) {\n    setter(event.target.value);\n    console.log(roomCode);\n  }\n\n  const showPreRoomModal = () => {\n    setPreRoomModalVisible(true);\n  };\n\n  async function onJoinRoom() {\n    //check availability\n    if (!userName) {\n      message.error(\"please enter a user name.\");\n      return;\n    }\n\n    console.log(props.history);\n    let socket = io(\"http://192.168.1.9:1234\", {\n      transport: ['websocket']\n    }); //create user profile\n\n    let userID = \"123\"; //await FirebaseUtil.getUserToken();\n\n    let user = {\n      userName: userName,\n      userID: userID\n    };\n    UserService.login(user);\n    props.data.user = user;\n    socket.on('connect', connection => {\n      //see if room exists\n      socket.emit('find-room', roomCode, UserService.getUserID()); //if room does not exist\n\n      socket.on(\"user-is-banned\", () => {\n        console.log('user-is-banned');\n        message.error(\"You've been blocked from this room.\"); //TODO: alert\n\n        return;\n      });\n      socket.on('room-not-found', () => {\n        //TODO: alert\n        message.error(\"room does not exist or is closed.\");\n        return;\n      }); //if room exists\n\n      socket.on('room-found', room => {\n        props.data.user = {\n          userName: userName\n        };\n        props.data.room = room;\n        props.history.push(\"/chat?room=\" + room.roomID); //props.pushHistory(\"/chat?code=\"+roomCode)\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"join-room-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"\",\n        children: \"Join A Room.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Enter room code.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setRoomCode, event),\n        value: roomCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Create a username.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setUserName, event),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"root-theme-button-sm join-room-button\",\n        onClick: () => onJoinRoom(),\n        children: \"join\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(JoinRoom, \"cmQjniG2gDVvO09MN3+HiIpAAug=\");\n\n_c = JoinRoom;\nexport default JoinRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinRoom\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/JoinRoom.js"],"names":["React","useState","useEffect","Modal","Button","message","withRouter","FirebaseUtil","styleSheet","CustomInput","io","JoinRoom","props","roomCode","setRoomCode","userName","setUserName","UserService","setUserService","preRoomModalVisible","setPreRoomModalVisible","setValue","setter","event","target","value","console","log","showPreRoomModal","onJoinRoom","error","history","socket","transport","userID","user","login","data","on","connection","emit","getUserID","room","push","roomID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,MAAvC;AACA,SAASC,UAAT,QAA0B,kBAA1B,C,CAEA;;AACA,SAAQC,YAAR,QAA2B,8BAA3B,C,CACA;;AAGA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,gBAAP;AACA,OAAO,2BAAP;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,EAAP,MAAe,kBAAf;;;AAKA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAACW,KAAK,CAACK,WAAP,CAA9C;AACA,QAAM,CAACE,mBAAD,EAAsBC,sBAAtB,IAAgDnB,QAAQ,CAAC,KAAD,CAA9D;;AAGA,WAASoB,QAAT,CAAkBC,MAAlB,EAA0BC,KAA1B,EAAgC;AAC5BD,IAAAA,MAAM,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACH;;AAED,QAAMe,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAFD;;AAMA,iBAAeS,UAAf,GAA2B;AAE1B;AACA,QAAG,CAACd,QAAJ,EAAa;AACXV,MAAAA,OAAO,CAACyB,KAAR,CAAc,2BAAd;AACA;AACD;;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACmB,OAAlB;AACA,QAAIC,MAAM,GAAGtB,EAAE,CAAC,yBAAD,EAA4B;AAAEuB,MAAAA,SAAS,EAAE,CAAC,WAAD;AAAb,KAA5B,CAAf,CATyB,CAWzB;;AACA,QAAIC,MAAM,GAAI,KAAd,CAZyB,CAYN;;AACnB,QAAIC,IAAI,GAAG;AAACpB,MAAAA,QAAQ,EAAEA,QAAX;AAAqBmB,MAAAA,MAAM,EAAEA;AAA7B,KAAX;AACAjB,IAAAA,WAAW,CAACmB,KAAZ,CAAkBD,IAAlB;AACAvB,IAAAA,KAAK,CAACyB,IAAN,CAAWF,IAAX,GAAkBA,IAAlB;AAIAH,IAAAA,MAAM,CAACM,EAAP,CAAU,SAAV,EAAsBC,UAAD,IAAgB;AAEnC;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyB3B,QAAzB,EAAmCI,WAAW,CAACwB,SAAZ,EAAnC,EAHmC,CAKnC;;AACAT,MAAAA,MAAM,CAACM,EAAP,CAAU,gBAAV,EAA4B,MAAM;AAChCZ,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAtB,QAAAA,OAAO,CAACyB,KAAR,CAAc,qCAAd,EAFgC,CAIhC;;AACA;AACD,OAND;AAWAE,MAAAA,MAAM,CAACM,EAAP,CAAU,gBAAV,EAA4B,MAAM;AAChC;AAEEjC,QAAAA,OAAO,CAACyB,KAAR,CAAc,mCAAd;AAEF;AACD,OAND,EAjBmC,CA0BnC;;AACAE,MAAAA,MAAM,CAACM,EAAP,CAAU,YAAV,EAAyBI,IAAD,IAAU;AAChC9B,QAAAA,KAAK,CAACyB,IAAN,CAAWF,IAAX,GAAkB;AAACpB,UAAAA,QAAQ,EAAEA;AAAX,SAAlB;AACAH,QAAAA,KAAK,CAACyB,IAAN,CAAWK,IAAX,GAAkBA,IAAlB;AACA9B,QAAAA,KAAK,CAACmB,OAAN,CAAcY,IAAd,CAAmB,gBAAcD,IAAI,CAACE,MAAtC,EAHgC,CAIhC;AAED,OAND;AAQD,KAnCD;AAqCD;;AAEH,sBACE;AAAA,2BAGE;AAAK,MAAA,KAAK,EAAC,gBAAX;AAAA,8BAEE;AAAI,QAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAMM,QAAC,WAAD;AACI,QAAA,KAAK,EAAC,kBADV;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,QAAQ,EAAGrB,KAAD,IAAWF,QAAQ,CAACP,WAAD,EAAcS,KAAd,CAHjC;AAII,QAAA,KAAK,EAAEV;AAJX;AAAA;AAAA;AAAA;AAAA,cANN,eAYM,QAAC,WAAD;AACI,QAAA,KAAK,EAAC,oBADV;AAEI,QAAA,WAAW,EAAC,gBAFhB;AAGI,QAAA,QAAQ,EAAGU,KAAD,IAAWF,QAAQ,CAACL,WAAD,EAAcO,KAAd,CAHjC;AAII,QAAA,KAAK,EAAER;AAJX;AAAA;AAAA;AAAA;AAAA,cAZN,eAuBA;AAAQ,QAAA,KAAK,EAAC,uCAAd;AAAsD,QAAA,OAAO,EAAE,MAAIc,UAAU,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAtHQlB,Q;;KAAAA,Q;AAwHT,eAAeA,QAAf","sourcesContent":["import React, { useState,  useEffect} from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { withRouter} from 'react-router-dom';\n\n//custom imports\nimport {FirebaseUtil} from '../FirebaseUtil/FirebaseUtil';\n//import {UserService} from '../FirebaseUtil/UserService';\n\n\nimport styleSheet from '../Styles/StyleSheet'\nimport './JoinRoom.css';\nimport '../Styles/root-themes.css';\n\nimport CustomInput from './CustomInput'\n\nimport io from 'socket.io-client';\n\n\n\n\nfunction JoinRoom(props) {\n\n    const [roomCode, setRoomCode] = useState(\"\")\n    const [userName, setUserName] = useState(\"\")\n    const [UserService, setUserService] = useState(props.UserService)\n    const [preRoomModalVisible, setPreRoomModalVisible] = useState(false);\n\n\n    function setValue(setter, event){\n        setter(event.target.value)\n        console.log(roomCode)\n    }\n\n    const showPreRoomModal = () => {\n      setPreRoomModalVisible(true);\n    };\n\n\n\n    async function onJoinRoom(){\n\n     //check availability\n     if(!userName){\n       message.error(\"please enter a user name.\");\n       return\n     }\n\n      console.log(props.history)\n      let socket = io(\"http://192.168.1.9:1234\", { transport: ['websocket']}) ;\n\n      //create user profile\n      let userID  = \"123\"//await FirebaseUtil.getUserToken();\n      let user = {userName: userName, userID: userID}\n      UserService.login(user)\n      props.data.user = user\n\n\n\n      socket.on('connect', (connection) => {\n\n        //see if room exists\n        socket.emit('find-room', roomCode, UserService.getUserID())\n\n        //if room does not exist\n        socket.on(\"user-is-banned\", () => {\n          console.log('user-is-banned')\n          message.error(\"You've been blocked from this room.\");\n\n          //TODO: alert\n          return\n        })\n\n\n      \n\n        socket.on('room-not-found', () => {\n          //TODO: alert\n\n            message.error(\"room does not exist or is closed.\");\n\n          return\n        })\n\n\n        //if room exists\n        socket.on('room-found', (room) => {\n          props.data.user = {userName: userName};\n          props.data.room = room;\n          props.history.push(\"/chat?room=\"+room.roomID)\n          //props.pushHistory(\"/chat?code=\"+roomCode)\n\n        })\n\n      })\n\n    }\n\n  return (\n    <div >\n\n\n      <div class=\"join-room-view\">\n\n        <h1 className=\"\">Join A Room.</h1>\n\n\n\n            <CustomInput\n                title=\"Enter room code.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setRoomCode, event)}\n                value={roomCode}\n            />\n            <CustomInput\n                title=\"Create a username.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setUserName, event)}\n                value={userName}\n            />\n\n            \n\n\n\n      <button class=\"root-theme-button-sm join-room-button\" onClick={()=>onJoinRoom()}>\n                join\n        </button>\n\n\n\n\n      </div>\n\n\n      \n    </div>\n\n  );\n}\n\nexport default JoinRoom;\n"]},"metadata":{},"sourceType":"module"}