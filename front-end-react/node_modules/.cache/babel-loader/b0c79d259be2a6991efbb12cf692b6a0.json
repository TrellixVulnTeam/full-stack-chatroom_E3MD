{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js\",\n    _s = $RefreshSig$();\n\nimport './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet';\nimport CustomInput from './CustomInput';\nimport Room from '../Models/RoomModel';\nimport React, { useState, useEffect } from 'react';\nimport { message } from 'antd';\nimport { firebase, FirebaseUtil } from '../FirebaseUtil/FirebaseUtil';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateRoom(props) {\n  _s();\n\n  //info for user sign up\n  const [roomName, setRoomName] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [socket, setSocket] = useState(\"\");\n  useEffect(async () => {\n    await firebase.auth().signInAnonymously();\n    FirebaseUtil.userCheckIn(\"new-user\").then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.error(\"Error adding document: \", error);\n    }); //open up connection to set up room\n\n    let socket_ = io(\"http://192.168.1.9:3000\", {\n      transport: ['websocket']\n    }); //save connection\n\n    setSocket(socket_); //once connected....\n\n    socket_.on('connect', connection => {\n      console.log(\"connected.\"); //get a code for the room\n\n      socket_.emit('generate-code');\n      socket_.on('generated-code', code => {\n        setRoomCode(code);\n      });\n    });\n  }, []);\n\n  function setValue(setter, event) {\n    setter(event.target.value);\n  }\n\n  function onCreateRoom() {\n    //validate user form\n    if (!userName) {\n      message.error(\"please enter a user name.\");\n      return;\n    } //Create room object //create user object\n\n\n    let room = new Room(roomCode, roomName, userName);\n    let user = {\n      userName: userName\n    }; //update props// TODO: change to redux\n\n    props.data.user = user;\n    props.data.room = room; //change pages\n\n    props.history.push(\"/chat?=\" + roomCode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-root create-room-root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-room-view\",\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Name Your Room\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setRoomName, event),\n        value: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        title: \"Create a username.\",\n        placeholder: \"placeholder...\",\n        onChange: event => setValue(setUserName, event),\n        value: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption\",\n          children: \"Share this code to your room.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption-subtitle\",\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption\",\n          children: \"Share this url to your room.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"caption-subtitle\",\n          children: \"websitename.com/chat?=\" + roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onCreateRoom,\n        style: styleSheet.smallbutton,\n        children: \" create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRoom, \"LOXd2yx8WUlCBbQV2980r7QNTS0=\");\n\n_c = CreateRoom;\nexport default CreateRoom;\n/*\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Landing/CreateRoom.js"],"names":["styleSheet","CustomInput","Room","React","useState","useEffect","message","firebase","FirebaseUtil","io","CreateRoom","props","roomName","setRoomName","userName","setUserName","password","setPassword","roomCode","setRoomCode","socket","setSocket","auth","signInAnonymously","userCheckIn","then","res","console","log","catch","error","socket_","transport","on","connection","emit","code","setValue","setter","event","target","value","onCreateRoom","room","user","data","history","push","smallbutton"],"mappings":"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","sourcesContent":["import './CreateRoom.css';\nimport '../Styles/root-themes.css';\nimport styleSheet from '../Styles/StyleSheet'\n\n\nimport CustomInput from './CustomInput'\nimport Room from '../Models/RoomModel'\nimport React, { useState,  useEffect} from 'react';\nimport { message} from 'antd';\nimport {firebase, FirebaseUtil} from '../FirebaseUtil/FirebaseUtil';\n\nimport io from 'socket.io-client';\n\n\n\n\nfunction CreateRoom(props) {\n\n    //info for user sign up\n    const [roomName, setRoomName] = useState(\"\")\n    const [userName, setUserName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [roomCode, setRoomCode] = useState(\"\")\n    const [socket, setSocket] = useState(\"\")\n\n\n    \n    useEffect(async () => {\n\n\n      await firebase.auth().signInAnonymously();\n      FirebaseUtil.userCheckIn(\"new-user\").then(res=>{\n        console.log(res)\n      }).catch((error) => {\n        console.error(\"Error adding document: \", error);\n    });\n    \n\n      //open up connection to set up room\n      let socket_ = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n\n      //save connection\n      setSocket(socket_)\n\n      //once connected....\n      socket_.on('connect', (connection) => {\n        console.log(\"connected.\")\n        //get a code for the room\n        socket_.emit('generate-code')\n        socket_.on('generated-code', (code) => {\n          setRoomCode(code)\n        })\n\n      })\n\n    }, []);\n\n    function setValue(setter, event){\n        setter(event.target.value)\n\n    }\n\n    function onCreateRoom(){\n\n      //validate user form\n      if(!userName){\n        message.error(\"please enter a user name.\");\n        return\n      }\n\n      //Create room object //create user object\n      let room = new Room(roomCode, roomName, userName)\n      let user = {userName: userName}\n      //update props// TODO: change to redux\n      props.data.user = user\n      props.data.room = room;\n      //change pages\n      props.history.push(\"/chat?=\"+roomCode)\n\n\n    }\n  return (\n    <div className=\"page-root create-room-root\">\n\n\n      <div className=\"create-room-view\">\n\n            <CustomInput\n                title=\"Name Your Room\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setRoomName, event)}\n                value={roomName}\n            />\n\n            <CustomInput\n                title=\"Create a username.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setUserName, event)}\n                value={userName}\n            />\n  \n            <div className=\"share-view\">\n              <p className=\"caption\">Share this code to your room.</p>\n              <p className=\"caption-subtitle\">{roomCode}</p><br/>\n              <p className=\"caption\">Share this url to your room.</p>\n              <p className=\"caption-subtitle\">{\"websitename.com/chat?=\"+roomCode}</p>\n            </div>\n\n            <button \n              onClick={onCreateRoom} \n              style={styleSheet.smallbutton}\n            > create\n            </button>\n\n      </div>\n      \n    </div>\n\n  );\n}\n\nexport default CreateRoom;\n\n\n/*\n\n\n         <CustomInput\n                title=\"Create an admin password.\"\n                placeholder=\"placeholder...\"\n                onChange={(event) => setValue(setPassword, event)}\n                value={password}\n            />\n\n\n\n      */"]},"metadata":{},"sourceType":"module"}