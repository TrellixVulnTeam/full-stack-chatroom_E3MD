{"ast":null,"code":"var _jsxFileName = \"/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js\";\nimport './chatroom.css';\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport io from 'socket.io-client';\nimport autosize from \"autosize\";\nimport ChatMessage from './ChatMessage';\nimport SocketManager from './Socket';\nimport { FaTelegramPlane } from \"react-icons/fa\";\nimport { Modal, Button } from 'antd'; // \"bnh5yzdirjinqaorq0ox1tf383nb3xr\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.socket = null;\n    this.MaxMessageLength = 140;\n    if (!props.data.room) props.history.push(\"/\");\n    let room_ = props.data.room; //new Room(\"25\", \"love isalnd ❤️\", \"kit\")//props.data.room\n\n    let user_ = props.data.user; //{userName: props.data.user.userName} //props.data.user_\n\n    let isAdmin_ = room_ ? room_.admin === user_.userName ? true : false : null; //==\n\n    let token_ = props.data.persistentToken ? props.data.persistentToken : null;\n    console.log(\"token is: \", token_);\n    this.removeMessage = this.removeMessage.bind(this);\n    this.onAddReaction = this.onAddReaction.bind(this);\n    this.state = {\n      room: room_,\n      user: user_,\n      isAdmin: isAdmin_,\n      newMessage: \"\",\n      messages: [],\n      status: \"loading\",\n      messageOptionsIsVisible: false\n    };\n    if (!this.state.room) this.props.history.push(\"/\");\n  }\n\n  componentDidMount() {\n    if (!this.state.room) this.props.history.push(\"/\");else {\n      this.connectSocket();\n      this.socketEvents();\n    }\n    this.textarea.focus();\n    autosize(this.textarea);\n  }\n\n  connectSocket() {\n    this.socket = io(\"http://192.168.1.9:3000\", {\n      transport: ['websocket']\n    });\n  }\n\n  set(field, value) {\n    if (field == \"newMessage\") if (value.length > 140) return;\n    this.setState({\n      [field]: value\n    });\n  }\n\n  socketEvents() {\n    //socket functions\n    this.socket.on('connect', connection => {\n      if (this.state.isAdmin) {\n        SocketManager.createRoom(this);\n      } else {\n        this.socket.emit('join-room', this.state.room.roomCode, this.props.data.persistentToken);\n      }\n\n      console.log(\"connected.\");\n      this.socket.on('generated-user-token', tkn => {\n        this.props.data.persistentToken = tkn;\n        localStorage.setItem(\"persistentToken\", tkn);\n        console.log(\"new token generated: \", tkn);\n      });\n      this.socket.on('backlog-messages', messages_ => {\n        this.set(\"messages\", messages_);\n        this.set(\"status\", \"loaded\");\n      });\n      this.socket.on('broadcasted-message', message => {\n        this.set(\"messages\", [...this.state.messages, message]);\n      });\n      this.socket.on('room-ended', () => {\n        console.log(\"room ended. \");\n        this.socket.close();\n        this.detachFromRoom();\n      });\n      this.socket.on('removed-message', messages_ => {\n        this.set(\"messages\", messages_);\n        console.log(\"messages updated: \", messages_);\n      });\n      this.socket.on('update-message', messages_ => {\n        this.set(\"messages\", messages_);\n        console.log(\"messages updated: \", messages_);\n      });\n      this.socket.on('find-and-ban-user', token => {\n        console.log(\"user has been banned.\");\n        console.log(token === this.props.data.persistentToken);\n        console.log(token, this.props.data.persistentToken);\n\n        if (token === this.props.data.persistentToken) {\n          this.detachFromRoom();\n          this.set(\"status\", \"banned\");\n        }\n      });\n    });\n  }\n\n  setValue(setter, event) {\n    this.set(setter, event.target.value);\n  }\n\n  updateNewMessage(event) {\n    this.set(\"newMessage\", event.target.value);\n  }\n\n  sendMessage() {\n    this.socket.emit(\"broadcast-message\", this.state.room.roomCode, this.state.newMessage, this.state.user.userName, this.props.data.persistentToken);\n    this.set(\"newMessage\", \"\");\n  }\n\n  endRoom() {\n    this.socket.emit(\"end-room\", this.state.room.roomCode);\n    this.detachFromRoom();\n  }\n\n  detachFromRoom() {\n    this.set(\"room\", null);\n    this.socket.close();\n    this.socket = null;\n    this.set(\"status\", \"closed\");\n  }\n\n  leaveRoom() {\n    this.socket.emit(\"leave-room\", this.roomCode);\n    this.detachFromRoom();\n    this.props.history.push(\"/\");\n  }\n\n  removeUser(msg) {}\n\n  exitClosedRoom() {\n    this.props.history.push(\"/\");\n  }\n\n  removeMessage(msg) {\n    alert(\"user will be banned\");\n    console.log(msg, this.state.room.roomCode, msg);\n    this.socket.emit(\"ban-user\", this.state.room.roomCode, msg);\n  }\n\n  onAddReaction(emoji, msg) {\n    this.socket.emit(\"add-reaction\", this.state.room.roomCode, msg, emoji);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"root-2\",\n      children: [this.state.room && this.state.status !== \"closed\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"chatroom-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"title-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"title-text\",\n            children: this.state.room.roomName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"leave-text\",\n            children: \"leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"chatroom-messages-view\",\n          children: this.state.messages ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.messages.map(msg => /*#__PURE__*/_jsxDEV(ChatMessage, {\n              onClick: () => this.removeMessage(msg),\n              onReportMessage: this.removeMessage,\n              message: msg,\n              text: msg.message,\n              userName: msg.userName,\n              reactions: msg.reactions,\n              onAddReaction: emoji => this.onAddReaction(emoji, msg),\n              isUser: this.state.user.userName === msg.userName\n            }, msg.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 21\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"typed-message-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            class: \"typed-message-input\",\n            ref: c => this.textarea = c,\n            rows: 3,\n            defaultValue: \"\",\n            value: this.state.newMessage,\n            onChange: event => this.setValue(\"newMessage\", event),\n            class: \"typed-message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"material-icons send-message-btn\",\n            onClick: this.sendMessage.bind(this),\n            children: /*#__PURE__*/_jsxDEV(FaTelegramPlane, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"character-count\",\n            children: [this.state.newMessage.length, \"/\", this.MaxMessageLength]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this) : null, this.state.status === \"closed\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"title-leave-btn\",\n          onClick: this.exitClosedRoom.bind(this),\n          children: \"leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" room is closed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this) : null, this.state.status === \"banned\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"title-leave-btn\",\n          onClick: this.exitClosedRoom.bind(this),\n          children: \"leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" you've been removed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Basic Modal\",\n        visible: isModalVisible,\n        onOk: handleOk,\n        onCancel: handleCancel,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Report User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 17\n        }, this), \"User will be removed when 3 users report or Admin bans.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(Chat);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/Users/kitan/Documents/CODING/Long-term-projects/group-chat-react-project/group-chat-react/src/Chatroom/ChatRoom.js"],"names":["withRouter","React","io","autosize","ChatMessage","SocketManager","FaTelegramPlane","Modal","Button","Chat","Component","constructor","props","socket","MaxMessageLength","data","room","history","push","room_","user_","user","isAdmin_","admin","userName","token_","persistentToken","console","log","removeMessage","bind","onAddReaction","state","isAdmin","newMessage","messages","status","messageOptionsIsVisible","componentDidMount","connectSocket","socketEvents","textarea","focus","transport","set","field","value","length","setState","on","connection","createRoom","emit","roomCode","tkn","localStorage","setItem","messages_","message","close","detachFromRoom","token","setValue","setter","event","target","updateNewMessage","sendMessage","endRoom","leaveRoom","removeUser","msg","exitClosedRoom","alert","emoji","render","roomName","map","reactions","id","c","isModalVisible","handleOk","handleCancel"],"mappings":"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","sourcesContent":["import './chatroom.css';\nimport { withRouter} from 'react-router-dom';\n\nimport React from 'react';\nimport io from 'socket.io-client';\nimport autosize from \"autosize\";\n\n\n\nimport ChatMessage from './ChatMessage';\nimport SocketManager from './Socket'\n\nimport { FaTelegramPlane } from \"react-icons/fa\";\nimport { Modal, Button } from 'antd';\n\n\n\n\n\n\n\n// \"bnh5yzdirjinqaorq0ox1tf383nb3xr\"\n\nclass Chat extends React.Component{\n\n\n    constructor(props){\n\n        super(props)\n\n        this.socket = null; \n        this.MaxMessageLength = 140;\n\n\n        if(!props.data.room) props.history.push(\"/\")\n\n        let room_ = props.data.room//new Room(\"25\", \"love isalnd ❤️\", \"kit\")//props.data.room\n        let user_ = props.data.user//{userName: props.data.user.userName} //props.data.user_\n        let isAdmin_ = room_ ?  (room_.admin === user_.userName? true: false):null //==\n        let token_= props.data.persistentToken? props.data.persistentToken: null;\n        console.log(\"token is: \", token_)\n\n        this.removeMessage =this.removeMessage.bind(this)\n        this.onAddReaction = this.onAddReaction.bind(this)\n\n        this.state ={\n            room: room_,\n            user: user_,\n            isAdmin: isAdmin_,\n            newMessage: \"\",\n            messages: [],\n            status: \"loading\",\n            messageOptionsIsVisible: false\n        }\n\n        if(!this.state.room)this.props.history.push(\"/\")\n        \n    }\n\n    \n    componentDidMount(){\n        if(!this.state.room)this.props.history.push(\"/\")\n        else{\n            this.connectSocket()\n            this.socketEvents()\n        }\n        this.textarea.focus();\n        autosize(this.textarea);\n    }\n\n    connectSocket(){\n        this.socket = io(\"http://192.168.1.9:3000\", { transport: ['websocket']}) ;\n    }\n\n\n    set(field, value){\n        if(field == \"newMessage\") \n            if(value.length >140)return\n        this.setState({[field]: value})\n    }\n\n    socketEvents(){\n\n        \n        //socket functions\n        this.socket.on('connect', (connection) => {\n           \n            if(this.state.isAdmin){\n                SocketManager.createRoom(this)\n            }else{\n                this.socket.emit('join-room', this.state.room.roomCode,  this.props.data.persistentToken)\n            }\n            console.log(\"connected.\")\n\n            this.socket.on('generated-user-token', (tkn) => {\n                this.props.data.persistentToken = tkn;\n                localStorage.setItem(\"persistentToken\", tkn)\n                console.log(\"new token generated: \",tkn)\n            });\n\n\n            this.socket.on('backlog-messages', (messages_) => {\n                this.set(\"messages\",messages_ )\n                this.set(\"status\", \"loaded\")\n\n            });\n\n            this.socket.on('broadcasted-message', (message) => {\n                this.set(\"messages\", [...this.state.messages,message])\n            });\n\n            this.socket.on('room-ended', () => {\n                console.log(\"room ended. \")\n                this.socket.close()\n                this.detachFromRoom()\n            });\n\n            this.socket.on('removed-message', (messages_) => {\n                this.set(\"messages\",messages_ )\n                console.log(\"messages updated: \", messages_)\n            });\n\n            this.socket.on('update-message', (messages_) => {\n                this.set(\"messages\",messages_ )\n                console.log(\"messages updated: \", messages_)\n            });\n\n            this.socket.on('find-and-ban-user', (token) => {\n                console.log(\"user has been banned.\")\n                console.log(token === this.props.data.persistentToken)\n                console.log(token, this.props.data.persistentToken)\n\n                \n                if(token === this.props.data.persistentToken){\n                    this.detachFromRoom();\n                    this.set(\"status\",\"banned\" )\n\n                }\n            });\n\n        });\n\n   \n\n\n\n    }\n\n    setValue(setter, event){\n        this.set(setter, event.target.value)\n    }\n\n    updateNewMessage(event){\n        this.set(\"newMessage\" ,event.target.value)\n    }\n\n    sendMessage(){\n        this.socket.emit(\"broadcast-message\", this.state.room.roomCode, this.state.newMessage, this.state.user.userName, this.props.data.persistentToken)\n        this.set(\"newMessage\", \"\")\n    }\n\n    endRoom(){\n        this.socket.emit(\"end-room\", this.state.room.roomCode)\n        this.detachFromRoom()\n    }\n\n    detachFromRoom(){\n        this.set(\"room\",null)\n        this.socket.close()\n        this.socket = null;\n        this.set(\"status\", \"closed\")\n    }\n\n    leaveRoom(){\n        this.socket.emit(\"leave-room\", this.roomCode)\n        this.detachFromRoom();\n        this.props.history.push(\"/\")\n    }\n\n    removeUser(msg){\n       \n        \n    }\n    \n    exitClosedRoom(){\n        this.props.history.push(\"/\")\n    }\n\n    removeMessage(msg){\n        alert(\"user will be banned\")\n        console.log(msg,  this.state.room.roomCode, msg)\n        this.socket.emit(\"ban-user\", this.state.room.roomCode, msg)\n    }\n\n    onAddReaction(emoji, msg){\n        this.socket.emit(\"add-reaction\", this.state.room.roomCode, msg, emoji)\n    }\n\n\n\n  \n    render(){\n\n        return (\n            <div class=\"root-2\">\n            {this.state.room && this.state.status !== \"closed\" ?\n                <div class=\"chatroom-view\">\n                \n                <div class=\"title-view\">\n     \n                    <span class=\"title-text\">{this.state.room.roomName}</span>\n                    {/*this.state.isAdmin?\n                        <p class=\"title-leave-btn\"  onClick={this.endRoom.bind(this)}>end room</p>:\n                        <p class=\"title-leave-btn\"  onClick={this.leaveRoom.bind(this)}>leave</p>\n                    */ }\n                    <span class=\"leave-text\">leave</span>\n\n        \n                </div>\n              \n                <div class=\"chatroom-messages-view\">\n            \n                    {this.state.messages?\n                    <div>\n                        {this.state.messages.map(msg=> \n                        <ChatMessage \n                            onClick={()=> this.removeMessage(msg)} \n                            onReportMessage={this.removeMessage}\n                            message ={msg}\n                            key={msg.id} \n                            text={msg.message} \n                            userName={msg.userName } \n                            reactions = {msg.reactions}\n                            onAddReaction={(emoji=>this.onAddReaction(emoji, msg))}\n                            isUser={this.state.user.userName === msg.userName}/>)}\n                    </div>\n                        :null\n                    }\n        \n                    </div>\n\n                    <div class=\"typed-message-view\">\n                    <textarea\n                        class=\"typed-message-input\"\n                        ref={c => (this.textarea = c)}\n                        rows={3}\n                        defaultValue=\"\"\n                        value={this.state.newMessage} \n                        onChange={(event)=> this.setValue(\"newMessage\", event) }\n                        class=\"typed-message-input\"\n                        />\n       \n                     \n                        <i class=\"material-icons send-message-btn\" \n                            onClick={this.sendMessage.bind(this)}\n                        ><FaTelegramPlane/></i>\n                        <span className=\"character-count\">{this.state.newMessage.length}/{this.MaxMessageLength}</span>\n                    </div>\n        \n                </div>\n                :null\n            }\n\n            {this.state.status === \"closed\"?\n            <div>\n                <p class=\"title-leave-btn\"  onClick={this.exitClosedRoom.bind(this)}>leave</p>\n                <p> room is closed.</p>\n            </div>:\n                null\n            }\n\n            {this.state.status === \"banned\"?\n            <div>\n                <p class=\"title-leave-btn\"  onClick={this.exitClosedRoom.bind(this)}>leave</p>\n                <p> you've been removed.</p>\n            </div>:\n                null\n            }\n\n\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\n                <button> Report User</button>\n                 User will be removed when 3 users report or Admin bans.\n            </Modal>\n\n\n\n\n\n\n\n            </div>\n\n\n\n\n\n\n        );\n        \n    }\n    \n}\n\nexport default withRouter(Chat);\n"]},"metadata":{},"sourceType":"module"}